// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardMicroView Testing Check that layout of component with data doesn't change 1`] = `
<MockedProvider
  addTypename={false}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "cardById",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "title",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardContentType",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "videoUrl",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "subTheme",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "theme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "globalTheme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "author",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "defaultValue": undefined,
                    "directives": Array [],
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NonNullType",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "ID",
                        },
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 527,
              "start": 0,
            },
          },
          "variables": Object {
            "id": 1800,
          },
        },
        "result": Object {
          "data": Object {
            "cardById": Object {
              "author": Array [
                Object {
                  "id": 6,
                  "name": "А.С. Чирцов",
                },
              ],
              "cardContentType": "A_0",
              "id": 1800,
              "subTheme": Array [
                Object {
                  "id": 50,
                  "name": "Кинематика",
                  "theme": Object {
                    "globalTheme": Object {
                      "id": 38,
                      "name": "Лекции Лекториум",
                    },
                    "id": 49,
                    "name": "Физика",
                  },
                },
              ],
              "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
              "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
            },
          },
        },
      },
    ]
  }
>
  <ApolloProvider
    client={
      ApolloClient {
        "cache": InMemoryCache {
          "addTypename": false,
          "config": Object {
            "addTypename": false,
            "dataIdFromObject": [Function],
            "resultCaching": true,
            "typePolicies": Object {},
          },
          "data": Root {
            "canRead": [Function],
            "data": Object {
              "ROOT_QUERY": Object {
                "__typename": "Query",
                "cardById({\\"id\\":1800})": Object {
                  "author": Array [
                    Object {
                      "id": 6,
                      "name": "А.С. Чирцов",
                    },
                  ],
                  "cardContentType": "A_0",
                  "id": 1800,
                  "subTheme": Array [
                    Object {
                      "id": 50,
                      "name": "Кинематика",
                      "theme": Object {
                        "globalTheme": Object {
                          "id": 38,
                          "name": "Лекции Лекториум",
                        },
                        "id": 49,
                        "name": "Физика",
                      },
                    },
                  ],
                  "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                  "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                },
              },
            },
            "getFieldValue": [Function],
            "group": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weak": WeakMap {},
                "weakness": true,
              },
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "refs": Object {},
            "rootIds": Object {
              "ROOT_QUERY": 1,
            },
            "sharedLayerGroup": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "storageTrie": Trie {
              "makeData": [Function],
              "weakness": true,
            },
            "toReference": [Function],
          },
          "evict": [Function],
          "getFragmentDoc": [Function],
          "makeVar": [Function],
          "maybeBroadcastWatch": [Function],
          "modify": [Function],
          "optimisticData": Root {
            "canRead": [Function],
            "data": Object {
              "ROOT_QUERY": Object {
                "__typename": "Query",
                "cardById({\\"id\\":1800})": Object {
                  "author": Array [
                    Object {
                      "id": 6,
                      "name": "А.С. Чирцов",
                    },
                  ],
                  "cardContentType": "A_0",
                  "id": 1800,
                  "subTheme": Array [
                    Object {
                      "id": 50,
                      "name": "Кинематика",
                      "theme": Object {
                        "globalTheme": Object {
                          "id": 38,
                          "name": "Лекции Лекториум",
                        },
                        "id": 49,
                        "name": "Физика",
                      },
                    },
                  ],
                  "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                  "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                },
              },
            },
            "getFieldValue": [Function],
            "group": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weak": WeakMap {},
                "weakness": true,
              },
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "refs": Object {},
            "rootIds": Object {
              "ROOT_QUERY": 1,
            },
            "sharedLayerGroup": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "storageTrie": Trie {
              "makeData": [Function],
              "weakness": true,
            },
            "toReference": [Function],
          },
          "policies": Policies {
            "cache": [Circular],
            "config": Object {
              "cache": [Circular],
              "dataIdFromObject": [Function],
              "possibleTypes": undefined,
              "typePolicies": Object {},
            },
            "fuzzySubtypes": Map {},
            "rootIdsByTypename": Object {
              "Mutation": "ROOT_MUTATION",
              "Query": "ROOT_QUERY",
              "Subscription": "ROOT_SUBSCRIPTION",
            },
            "rootTypenamesById": Object {
              "ROOT_MUTATION": "Mutation",
              "ROOT_QUERY": "Query",
              "ROOT_SUBSCRIPTION": "Subscription",
            },
            "supertypeMap": Map {},
            "toBeAdded": Object {},
            "typePolicies": Object {
              "Query": Object {
                "fields": Object {},
              },
            },
            "usingPossibleTypes": false,
          },
          "reset": [Function],
          "storeReader": StoreReader {
            "config": Object {
              "addTypename": false,
              "cache": [Circular],
            },
            "executeSelectionSet": [Function],
            "executeSubSelectedArray": [Function],
            "knownResults": WeakMap {},
          },
          "storeWriter": StoreWriter {
            "cache": [Circular],
            "reader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
          },
          "txCount": 0,
          "typenameDocumentCache": Map {},
          "watchDep": [Function],
          "watches": Set {
            Object {
              "callback": [Function],
              "optimistic": true,
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "cardById",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "title",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardContentType",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "videoUrl",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "subTheme",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "theme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "globalTheme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "author",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "ID",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 527,
                  "start": 0,
                },
              },
              "variables": Object {
                "id": 1800,
              },
            },
          },
        },
        "clearStoreCallbacks": Array [],
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": MockLink {
          "addTypename": false,
          "mockedResponsesByKey": Object {
            "{\\"query\\":\\"query GET_CARD_FOR_MICRO_VIEW_BY_ID($id: ID!) {\\\\n  cardById(id: $id) {\\\\n    id\\\\n    title\\\\n    cardContentType\\\\n    videoUrl\\\\n    subTheme {\\\\n      id\\\\n      name\\\\n      theme {\\\\n        id\\\\n        name\\\\n        globalTheme {\\\\n          id\\\\n          name\\\\n        }\\\\n      }\\\\n    }\\\\n    author {\\\\n      id\\\\n      name\\\\n    }\\\\n  }\\\\n}\\\\n\\"}": Array [],
          },
          "operation": Object {
            "extensions": Object {},
            "operationName": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "cardById",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "title",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cardContentType",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "videoUrl",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "subTheme",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "theme",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "globalTheme",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "author",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NonNullType",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ID",
                          },
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "id",
                        },
                      },
                    },
                  ],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 527,
                "start": 0,
              },
            },
            "variables": Object {
              "id": 1800,
            },
          },
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "evict": [Function],
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "modify": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "reset": [Function],
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {
              Object {
                "callback": [Function],
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardById",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cardContentType",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "videoUrl",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "subTheme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "theme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "globalTheme",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "author",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "directives": Array [],
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "ID",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 527,
                    "start": 0,
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
            },
          },
          "client": [Circular],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "queryManager": QueryManager {
          "assumeImmutableResults": false,
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "evict": [Function],
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "modify": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "reset": [Function],
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {
              Object {
                "callback": [Function],
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardById",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cardContentType",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "videoUrl",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "subTheme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "theme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "globalTheme",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "author",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "directives": Array [],
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "ID",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 527,
                    "start": 0,
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
            },
          },
          "clientAwareness": Object {
            "name": undefined,
            "version": undefined,
          },
          "fetchCancelFns": Map {},
          "inFlightLinkObservables": Map {},
          "link": MockLink {
            "addTypename": false,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"query GET_CARD_FOR_MICRO_VIEW_BY_ID($id: ID!) {\\\\n  cardById(id: $id) {\\\\n    id\\\\n    title\\\\n    cardContentType\\\\n    videoUrl\\\\n    subTheme {\\\\n      id\\\\n      name\\\\n      theme {\\\\n        id\\\\n        name\\\\n        globalTheme {\\\\n          id\\\\n          name\\\\n        }\\\\n      }\\\\n    }\\\\n    author {\\\\n      id\\\\n      name\\\\n    }\\\\n  }\\\\n}\\\\n\\"}": Array [],
            },
            "operation": Object {
              "extensions": Object {},
              "operationName": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "cardById",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "title",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardContentType",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "videoUrl",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "subTheme",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "theme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "globalTheme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "author",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "ID",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 527,
                  "start": 0,
                },
              },
              "variables": Object {
                "id": 1800,
              },
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "cardById({\\"id\\":1800})": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "evict": [Function],
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "modify": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "cardById({\\"id\\":1800})": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "reset": [Function],
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watchDep": [Function],
              "watches": Set {
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cardById",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "title",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cardContentType",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "videoUrl",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "subTheme",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "theme",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "globalTheme",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "name",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "author",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "directives": Array [],
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "ID",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 527,
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "id": 1800,
                  },
                },
              },
            },
            "client": [Circular],
          },
          "mutationIdCounter": 1,
          "onBroadcast": undefined,
          "queries": Map {
            "1" => QueryInfo {
              "cache": InMemoryCache {
                "addTypename": false,
                "config": Object {
                  "addTypename": false,
                  "dataIdFromObject": [Function],
                  "resultCaching": true,
                  "typePolicies": Object {},
                },
                "data": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "cardById({\\"id\\":1800})": Object {
                        "author": Array [
                          Object {
                            "id": 6,
                            "name": "А.С. Чирцов",
                          },
                        ],
                        "cardContentType": "A_0",
                        "id": 1800,
                        "subTheme": Array [
                          Object {
                            "id": 50,
                            "name": "Кинематика",
                            "theme": Object {
                              "globalTheme": Object {
                                "id": 38,
                                "name": "Лекции Лекториум",
                              },
                              "id": 49,
                              "name": "Физика",
                            },
                          },
                        ],
                        "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                        "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                      },
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "evict": [Function],
                "getFragmentDoc": [Function],
                "makeVar": [Function],
                "maybeBroadcastWatch": [Function],
                "modify": [Function],
                "optimisticData": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "cardById({\\"id\\":1800})": Object {
                        "author": Array [
                          Object {
                            "id": 6,
                            "name": "А.С. Чирцов",
                          },
                        ],
                        "cardContentType": "A_0",
                        "id": 1800,
                        "subTheme": Array [
                          Object {
                            "id": 50,
                            "name": "Кинематика",
                            "theme": Object {
                              "globalTheme": Object {
                                "id": 38,
                                "name": "Лекции Лекториум",
                              },
                              "id": 49,
                              "name": "Физика",
                            },
                          },
                        ],
                        "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                        "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                      },
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "reset": [Function],
                "storeReader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
                "storeWriter": StoreWriter {
                  "cache": [Circular],
                  "reader": StoreReader {
                    "config": Object {
                      "addTypename": false,
                      "cache": [Circular],
                    },
                    "executeSelectionSet": [Function],
                    "executeSubSelectedArray": [Function],
                    "knownResults": WeakMap {},
                  },
                },
                "txCount": 0,
                "typenameDocumentCache": Map {},
                "watchDep": [Function],
                "watches": Set {
                  Object {
                    "callback": [Function],
                    "optimistic": true,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardById",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "title",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cardContentType",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "videoUrl",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "subTheme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "theme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "globalTheme",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "id",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "name",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "author",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "ID",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 527,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "id": 1800,
                    },
                  },
                },
              },
              "cancel": [Function],
              "diff": Object {
                "complete": true,
                "missing": undefined,
                "result": Object {
                  "cardById": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "dirty": false,
              "document": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "cardById",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "title",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardContentType",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "videoUrl",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "subTheme",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "theme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "globalTheme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "author",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "ID",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 527,
                  "start": 0,
                },
              },
              "graphQLErrors": Array [],
              "lastRequestId": 1,
              "lastWatch": Object {
                "callback": [Function],
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardById",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cardContentType",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "videoUrl",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "subTheme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "theme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "globalTheme",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "author",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "directives": Array [],
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "ID",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 527,
                    "start": 0,
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
              "lastWrite": Object {
                "dmCount": 0,
                "result": Object {
                  "data": Object {
                    "cardById": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
              "listeners": Set {
                [Function],
              },
              "networkError": undefined,
              "networkStatus": 7,
              "observableQuery": ObservableQuery {
                "_subscriber": [Function],
                "isTornDown": false,
                "lastResult": Object {
                  "data": Object {
                    "cardById": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                  "loading": false,
                  "networkStatus": 7,
                },
                "lastResultSnapshot": Object {
                  "data": Object {
                    "cardById": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                  "loading": false,
                  "networkStatus": 7,
                },
                "observer": Object {
                  "error": [Function],
                  "next": [Function],
                },
                "observers": Set {
                  SubscriptionObserver {
                    "_subscription": Subscription {
                      "_cleanup": [Function],
                      "_observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "_queue": undefined,
                      "_state": "ready",
                    },
                  },
                },
                "options": Object {
                  "context": undefined,
                  "displayName": "Query",
                  "fetchPolicy": "cache-first",
                  "notifyOnNetworkStatusChange": false,
                  "onCompleted": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cardById",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "title",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cardContentType",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "videoUrl",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "subTheme",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "theme",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "globalTheme",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "name",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "author",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "directives": Array [],
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "ID",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 527,
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "id": 1800,
                  },
                },
                "queryId": "1",
                "queryInfo": [Circular],
                "queryManager": [Circular],
                "queryName": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                "reobserver": Reobserver {
                  "concast": Concast {
                    "_subscriber": [Function],
                    "addCount": 1,
                    "cancel": [Function],
                    "handlers": Object {
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "latest": Array [
                      "next",
                      Object {
                        "data": Object {
                          "cardById": Object {
                            "author": Array [
                              Object {
                                "id": 6,
                                "name": "А.С. Чирцов",
                              },
                            ],
                            "cardContentType": "A_0",
                            "id": 1800,
                            "subTheme": Array [
                              Object {
                                "id": 50,
                                "name": "Кинематика",
                                "theme": Object {
                                  "globalTheme": Object {
                                    "id": 38,
                                    "name": "Лекции Лекториум",
                                  },
                                  "id": 49,
                                  "name": "Физика",
                                },
                              },
                            ],
                            "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                            "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                          },
                        },
                        "loading": false,
                        "networkStatus": 7,
                      },
                    ],
                    "observers": Set {
                      Object {
                        "error": [Function],
                        "next": [Function],
                      },
                    },
                    "promise": Promise {},
                    "reject": [Function],
                    "resolve": [Function],
                    "sources": Array [],
                    "sub": null,
                  },
                  "fetch": [Function],
                  "observer": Object {
                    "error": [Function],
                    "next": [Function],
                  },
                  "options": Object {
                    "context": undefined,
                    "displayName": "Query",
                    "fetchPolicy": "cache-first",
                    "notifyOnNetworkStatusChange": false,
                    "onCompleted": [Function],
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardById",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "title",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cardContentType",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "videoUrl",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "subTheme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "theme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "globalTheme",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "id",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "name",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "author",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "ID",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 527,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "id": 1800,
                    },
                  },
                  "shouldFetch": [Function],
                },
                "subscriptions": Set {},
              },
              "oqListener": [Function],
              "stopped": false,
              "subscriptions": Set {},
              "variables": Object {
                "id": 1800,
              },
            },
          },
          "queryDeduplication": true,
          "queryIdCounter": 2,
          "requestIdCounter": 2,
          "ssrMode": false,
          "transformCache": WeakMap {},
        },
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "typeDefs": undefined,
        "version": "3.3.17",
        "watchQuery": [Function],
      }
    }
  >
    <CardMicroView
      cardID={1800}
    >
      <div>
        <ForwardRef(Card)
          className="makeStyles-root-1"
          onClick={[Function]}
          variant="outlined"
        >
          <MuiCardRoot
            className="MuiCard-root makeStyles-root-1"
            onClick={[Function]}
            ownerState={
              Object {
                "children": <ForwardRef(Grid)
                  container={true}
                >
                  <ForwardRef(Grid)
                    item={true}
                    xs={4}
                  >
                    <ForwardRef(CardMedia)
                      image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                      style={
                        Object {
                          "height": 169,
                          "width": 132,
                        }
                      }
                    />
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    xs={8}
                  >
                    <ForwardRef(CardActionArea)>
                      <ForwardRef(CardContent)
                        className="justify-content-start"
                        style={
                          Object {
                            "padding": 4,
                            "paddingLeft": 10,
                            "paddingRight": 10,
                          }
                        }
                      >
                        <ForwardRef(Typography)
                          gutterBottom={true}
                          variant="h6"
                        >
                          ID: 
                          1800
                          <ForwardRef(Chip)
                            color="secondary"
                            icon={<Memo />}
                            id="YouTube-icon"
                            label="YouTube"
                            size="small"
                            style={
                              Object {
                                "marginLeft": 12,
                              }
                            }
                            variant="outlined"
                          />
                        </ForwardRef(Typography)>
                        <ForwardRef(Typography)
                          style={
                            Object {
                              "maxHeight": 48,
                              "overflow": "hidden",
                            }
                          }
                        >
                          Лекция 3.5.2 | Классический закон сложения скоростей | А
                        </ForwardRef(Typography)>
                        <ForwardRef(Typography)>
                          <Popover
                            content={
                              Array [
                                <div>
                                  Лекции Лекториум / Физика / Кинематика
                                </div>,
                              ]
                            }
                            mouseEnterDelay={0.1}
                            mouseLeaveDelay={0.1}
                            overlayStyle={Object {}}
                            placement="top"
                            title="Темы карточки"
                            trigger="hover"
                          >
                            <ForwardRef(Chip)
                              label="Кинематика"
                              size="small"
                              variant="outlined"
                            />
                          </Popover>
                          <br />
                          <ForwardRef(Chip)
                            className="mt-1"
                            label="А.С. Чирцов"
                            variant="outlined"
                          />
                        </ForwardRef(Typography)>
                        <br />
                        <br />
                      </ForwardRef(CardContent)>
                    </ForwardRef(CardActionArea)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>,
                "className": "makeStyles-root-1",
                "onClick": [Function],
                "raised": false,
                "variant": "outlined",
              }
            }
            variant="outlined"
          >
            <ForwardRef(Paper)
              className="MuiCard-root makeStyles-root-1 css-1gdfwye-MuiCard-root"
              onClick={[Function]}
              variant="outlined"
            >
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root makeStyles-root-1 css-1gdfwye-MuiCard-root"
                onClick={[Function]}
                ownerState={
                  Object {
                    "children": <ForwardRef(Grid)
                      container={true}
                    >
                      <ForwardRef(Grid)
                        item={true}
                        xs={4}
                      >
                        <ForwardRef(CardMedia)
                          image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                          style={
                            Object {
                              "height": 169,
                              "width": 132,
                            }
                          }
                        />
                      </ForwardRef(Grid)>
                      <ForwardRef(Grid)
                        item={true}
                        xs={8}
                      >
                        <ForwardRef(CardActionArea)>
                          <ForwardRef(CardContent)
                            className="justify-content-start"
                            style={
                              Object {
                                "padding": 4,
                                "paddingLeft": 10,
                                "paddingRight": 10,
                              }
                            }
                          >
                            <ForwardRef(Typography)
                              gutterBottom={true}
                              variant="h6"
                            >
                              ID: 
                              1800
                              <ForwardRef(Chip)
                                color="secondary"
                                icon={<Memo />}
                                id="YouTube-icon"
                                label="YouTube"
                                size="small"
                                style={
                                  Object {
                                    "marginLeft": 12,
                                  }
                                }
                                variant="outlined"
                              />
                            </ForwardRef(Typography)>
                            <ForwardRef(Typography)
                              style={
                                Object {
                                  "maxHeight": 48,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              Лекция 3.5.2 | Классический закон сложения скоростей | А
                            </ForwardRef(Typography)>
                            <ForwardRef(Typography)>
                              <Popover
                                content={
                                  Array [
                                    <div>
                                      Лекции Лекториум / Физика / Кинематика
                                    </div>,
                                  ]
                                }
                                mouseEnterDelay={0.1}
                                mouseLeaveDelay={0.1}
                                overlayStyle={Object {}}
                                placement="top"
                                title="Темы карточки"
                                trigger="hover"
                              >
                                <ForwardRef(Chip)
                                  label="Кинематика"
                                  size="small"
                                  variant="outlined"
                                />
                              </Popover>
                              <br />
                              <ForwardRef(Chip)
                                className="mt-1"
                                label="А.С. Чирцов"
                                variant="outlined"
                              />
                            </ForwardRef(Typography)>
                            <br />
                            <br />
                          </ForwardRef(CardContent)>
                        </ForwardRef(CardActionArea)>
                      </ForwardRef(Grid)>
                    </ForwardRef(Grid)>,
                    "className": "MuiCard-root makeStyles-root-1 css-1gdfwye-MuiCard-root",
                    "component": "div",
                    "elevation": 1,
                    "onClick": [Function],
                    "square": false,
                    "variant": "outlined",
                  }
                }
              >
                <div
                  className="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root makeStyles-root-1 css-1v5z4dq-MuiPaper-root-MuiCard-root"
                  onClick={[Function]}
                >
                  <ForwardRef(Grid)
                    container={true}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                              xs={4}
                            >
                              <ForwardRef(CardMedia)
                                image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                                style={
                                  Object {
                                    "height": 169,
                                    "width": 132,
                                  }
                                }
                              />
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                              xs={8}
                            >
                              <ForwardRef(CardActionArea)>
                                <ForwardRef(CardContent)
                                  className="justify-content-start"
                                  style={
                                    Object {
                                      "padding": 4,
                                      "paddingLeft": 10,
                                      "paddingRight": 10,
                                    }
                                  }
                                >
                                  <ForwardRef(Typography)
                                    gutterBottom={true}
                                    variant="h6"
                                  >
                                    ID: 
                                    1800
                                    <ForwardRef(Chip)
                                      color="secondary"
                                      icon={<Memo />}
                                      id="YouTube-icon"
                                      label="YouTube"
                                      size="small"
                                      style={
                                        Object {
                                          "marginLeft": 12,
                                        }
                                      }
                                      variant="outlined"
                                    />
                                  </ForwardRef(Typography)>
                                  <ForwardRef(Typography)
                                    style={
                                      Object {
                                        "maxHeight": 48,
                                        "overflow": "hidden",
                                      }
                                    }
                                  >
                                    Лекция 3.5.2 | Классический закон сложения скоростей | А
                                  </ForwardRef(Typography)>
                                  <ForwardRef(Typography)>
                                    <Popover
                                      content={
                                        Array [
                                          <div>
                                            Лекции Лекториум / Физика / Кинематика
                                          </div>,
                                        ]
                                      }
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      overlayStyle={Object {}}
                                      placement="top"
                                      title="Темы карточки"
                                      trigger="hover"
                                    >
                                      <ForwardRef(Chip)
                                        label="Кинематика"
                                        size="small"
                                        variant="outlined"
                                      />
                                    </Popover>
                                    <br />
                                    <ForwardRef(Chip)
                                      className="mt-1"
                                      label="А.С. Чирцов"
                                      variant="outlined"
                                    />
                                  </ForwardRef(Typography)>
                                  <br />
                                  <br />
                                </ForwardRef(CardContent)>
                              </ForwardRef(CardActionArea)>
                            </ForwardRef(Grid)>,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": false,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {},
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={Object {}}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined css-11lq3yg-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={4}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-4"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(CardMedia)
                                    image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                                    style={
                                      Object {
                                        "height": 169,
                                        "width": 132,
                                      }
                                    }
                                  />,
                                  false,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 4,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-4 css-1744jwa-MuiGrid-root"
                            >
                              <ForwardRef(CardMedia)
                                image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                                style={
                                  Object {
                                    "height": 169,
                                    "width": 132,
                                  }
                                }
                              >
                                <MuiCardMediaRoot
                                  as="div"
                                  className="MuiCardMedia-root"
                                  ownerState={
                                    Object {
                                      "component": "div",
                                      "image": "https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg",
                                      "isImageComponent": false,
                                      "isMediaComponent": false,
                                      "style": Object {
                                        "height": 169,
                                        "width": 132,
                                      },
                                    }
                                  }
                                  role="img"
                                  style={
                                    Object {
                                      "backgroundImage": "url(\\"https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg\\")",
                                      "height": 169,
                                      "width": 132,
                                    }
                                  }
                                >
                                  <div
                                    className="MuiCardMedia-root css-16cvb1l-MuiCardMedia-root"
                                    role="img"
                                    style={
                                      Object {
                                        "backgroundImage": "url(\\"https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg\\")",
                                        "height": 169,
                                        "width": 132,
                                      }
                                    }
                                  />
                                </MuiCardMediaRoot>
                              </ForwardRef(CardMedia)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={8}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8"
                            ownerState={
                              Object {
                                "children": <ForwardRef(CardActionArea)>
                                  <ForwardRef(CardContent)
                                    className="justify-content-start"
                                    style={
                                      Object {
                                        "padding": 4,
                                        "paddingLeft": 10,
                                        "paddingRight": 10,
                                      }
                                    }
                                  >
                                    <ForwardRef(Typography)
                                      gutterBottom={true}
                                      variant="h6"
                                    >
                                      ID: 
                                      1800
                                      <ForwardRef(Chip)
                                        color="secondary"
                                        icon={<Memo />}
                                        id="YouTube-icon"
                                        label="YouTube"
                                        size="small"
                                        style={
                                          Object {
                                            "marginLeft": 12,
                                          }
                                        }
                                        variant="outlined"
                                      />
                                    </ForwardRef(Typography)>
                                    <ForwardRef(Typography)
                                      style={
                                        Object {
                                          "maxHeight": 48,
                                          "overflow": "hidden",
                                        }
                                      }
                                    >
                                      Лекция 3.5.2 | Классический закон сложения скоростей | А
                                    </ForwardRef(Typography)>
                                    <ForwardRef(Typography)>
                                      <Popover
                                        content={
                                          Array [
                                            <div>
                                              Лекции Лекториум / Физика / Кинематика
                                            </div>,
                                          ]
                                        }
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        overlayStyle={Object {}}
                                        placement="top"
                                        title="Темы карточки"
                                        trigger="hover"
                                      >
                                        <ForwardRef(Chip)
                                          label="Кинематика"
                                          size="small"
                                          variant="outlined"
                                        />
                                      </Popover>
                                      <br />
                                      <ForwardRef(Chip)
                                        className="mt-1"
                                        label="А.С. Чирцов"
                                        variant="outlined"
                                      />
                                    </ForwardRef(Typography)>
                                    <br />
                                    <br />
                                  </ForwardRef(CardContent)>
                                </ForwardRef(CardActionArea)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 8,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 css-12dpnmv-MuiGrid-root"
                            >
                              <ForwardRef(CardActionArea)>
                                <MuiCardActionAreaRoot
                                  className="MuiCardActionArea-root"
                                  focusVisibleClassName=""
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(CardContent)
                                        className="justify-content-start"
                                        style={
                                          Object {
                                            "padding": 4,
                                            "paddingLeft": 10,
                                            "paddingRight": 10,
                                          }
                                        }
                                      >
                                        <ForwardRef(Typography)
                                          gutterBottom={true}
                                          variant="h6"
                                        >
                                          ID: 
                                          1800
                                          <ForwardRef(Chip)
                                            color="secondary"
                                            icon={<Memo />}
                                            id="YouTube-icon"
                                            label="YouTube"
                                            size="small"
                                            style={
                                              Object {
                                                "marginLeft": 12,
                                              }
                                            }
                                            variant="outlined"
                                          />
                                        </ForwardRef(Typography)>
                                        <ForwardRef(Typography)
                                          style={
                                            Object {
                                              "maxHeight": 48,
                                              "overflow": "hidden",
                                            }
                                          }
                                        >
                                          Лекция 3.5.2 | Классический закон сложения скоростей | А
                                        </ForwardRef(Typography)>
                                        <ForwardRef(Typography)>
                                          <Popover
                                            content={
                                              Array [
                                                <div>
                                                  Лекции Лекториум / Физика / Кинематика
                                                </div>,
                                              ]
                                            }
                                            mouseEnterDelay={0.1}
                                            mouseLeaveDelay={0.1}
                                            overlayStyle={Object {}}
                                            placement="top"
                                            title="Темы карточки"
                                            trigger="hover"
                                          >
                                            <ForwardRef(Chip)
                                              label="Кинематика"
                                              size="small"
                                              variant="outlined"
                                            />
                                          </Popover>
                                          <br />
                                          <ForwardRef(Chip)
                                            className="mt-1"
                                            label="А.С. Чирцов"
                                            variant="outlined"
                                          />
                                        </ForwardRef(Typography)>
                                        <br />
                                        <br />
                                      </ForwardRef(CardContent)>,
                                    }
                                  }
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root"
                                    focusVisibleClassName=""
                                  >
                                    <MuiButtonBaseRoot
                                      as="button"
                                      className="MuiButtonBase-root MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      ownerState={
                                        Object {
                                          "centerRipple": false,
                                          "children": Array [
                                            <ForwardRef(CardContent)
                                              className="justify-content-start"
                                              style={
                                                Object {
                                                  "padding": 4,
                                                  "paddingLeft": 10,
                                                  "paddingRight": 10,
                                                }
                                              }
                                            >
                                              <ForwardRef(Typography)
                                                gutterBottom={true}
                                                variant="h6"
                                              >
                                                ID: 
                                                1800
                                                <ForwardRef(Chip)
                                                  color="secondary"
                                                  icon={<Memo />}
                                                  id="YouTube-icon"
                                                  label="YouTube"
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": 12,
                                                    }
                                                  }
                                                  variant="outlined"
                                                />
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)
                                                style={
                                                  Object {
                                                    "maxHeight": 48,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                Лекция 3.5.2 | Классический закон сложения скоростей | А
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)>
                                                <Popover
                                                  content={
                                                    Array [
                                                      <div>
                                                        Лекции Лекториум / Физика / Кинематика
                                                      </div>,
                                                    ]
                                                  }
                                                  mouseEnterDelay={0.1}
                                                  mouseLeaveDelay={0.1}
                                                  overlayStyle={Object {}}
                                                  placement="top"
                                                  title="Темы карточки"
                                                  trigger="hover"
                                                >
                                                  <ForwardRef(Chip)
                                                    label="Кинематика"
                                                    size="small"
                                                    variant="outlined"
                                                  />
                                                </Popover>
                                                <br />
                                                <ForwardRef(Chip)
                                                  className="mt-1"
                                                  label="А.С. Чирцов"
                                                  variant="outlined"
                                                />
                                              </ForwardRef(Typography)>
                                              <br />
                                              <br />
                                            </ForwardRef(CardContent)>,
                                            <MuiCardActionAreaFocusHighlight
                                              className="MuiCardActionArea-focusHighlight"
                                              ownerState={
                                                Object {
                                                  "children": <ForwardRef(CardContent)
                                                    className="justify-content-start"
                                                    style={
                                                      Object {
                                                        "padding": 4,
                                                        "paddingLeft": 10,
                                                        "paddingRight": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(Typography)
                                                      gutterBottom={true}
                                                      variant="h6"
                                                    >
                                                      ID: 
                                                      1800
                                                      <ForwardRef(Chip)
                                                        color="secondary"
                                                        icon={<Memo />}
                                                        id="YouTube-icon"
                                                        label="YouTube"
                                                        size="small"
                                                        style={
                                                          Object {
                                                            "marginLeft": 12,
                                                          }
                                                        }
                                                        variant="outlined"
                                                      />
                                                    </ForwardRef(Typography)>
                                                    <ForwardRef(Typography)
                                                      style={
                                                        Object {
                                                          "maxHeight": 48,
                                                          "overflow": "hidden",
                                                        }
                                                      }
                                                    >
                                                      Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                    </ForwardRef(Typography)>
                                                    <ForwardRef(Typography)>
                                                      <Popover
                                                        content={
                                                          Array [
                                                            <div>
                                                              Лекции Лекториум / Физика / Кинематика
                                                            </div>,
                                                          ]
                                                        }
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        overlayStyle={Object {}}
                                                        placement="top"
                                                        title="Темы карточки"
                                                        trigger="hover"
                                                      >
                                                        <ForwardRef(Chip)
                                                          label="Кинематика"
                                                          size="small"
                                                          variant="outlined"
                                                        />
                                                      </Popover>
                                                      <br />
                                                      <ForwardRef(Chip)
                                                        className="mt-1"
                                                        label="А.С. Чирцов"
                                                        variant="outlined"
                                                      />
                                                    </ForwardRef(Typography)>
                                                    <br />
                                                    <br />
                                                  </ForwardRef(CardContent)>,
                                                }
                                              }
                                            />,
                                          ],
                                          "className": "MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root",
                                          "component": "button",
                                          "disableRipple": false,
                                          "disableTouchRipple": false,
                                          "disabled": false,
                                          "focusRipple": false,
                                          "focusVisible": false,
                                          "focusVisibleClassName": "",
                                          "tabIndex": 0,
                                        }
                                      }
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiCardActionArea-root css-b6lsxj-MuiButtonBase-root-MuiCardActionArea-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onContextMenu={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(CardContent)
                                          className="justify-content-start"
                                          style={
                                            Object {
                                              "padding": 4,
                                              "paddingLeft": 10,
                                              "paddingRight": 10,
                                            }
                                          }
                                        >
                                          <MuiCardContentRoot
                                            as="div"
                                            className="MuiCardContent-root justify-content-start"
                                            ownerState={
                                              Object {
                                                "children": Array [
                                                  <ForwardRef(Typography)
                                                    gutterBottom={true}
                                                    variant="h6"
                                                  >
                                                    ID: 
                                                    1800
                                                    <ForwardRef(Chip)
                                                      color="secondary"
                                                      icon={<Memo />}
                                                      id="YouTube-icon"
                                                      label="YouTube"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "marginLeft": 12,
                                                        }
                                                      }
                                                      variant="outlined"
                                                    />
                                                  </ForwardRef(Typography)>,
                                                  <ForwardRef(Typography)
                                                    style={
                                                      Object {
                                                        "maxHeight": 48,
                                                        "overflow": "hidden",
                                                      }
                                                    }
                                                  >
                                                    Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                  </ForwardRef(Typography)>,
                                                  <ForwardRef(Typography)>
                                                    <Popover
                                                      content={
                                                        Array [
                                                          <div>
                                                            Лекции Лекториум / Физика / Кинематика
                                                          </div>,
                                                        ]
                                                      }
                                                      mouseEnterDelay={0.1}
                                                      mouseLeaveDelay={0.1}
                                                      overlayStyle={Object {}}
                                                      placement="top"
                                                      title="Темы карточки"
                                                      trigger="hover"
                                                    >
                                                      <ForwardRef(Chip)
                                                        label="Кинематика"
                                                        size="small"
                                                        variant="outlined"
                                                      />
                                                    </Popover>
                                                    <br />
                                                    <ForwardRef(Chip)
                                                      className="mt-1"
                                                      label="А.С. Чирцов"
                                                      variant="outlined"
                                                    />
                                                  </ForwardRef(Typography)>,
                                                  <br />,
                                                  <br />,
                                                ],
                                                "className": "justify-content-start",
                                                "component": "div",
                                                "style": Object {
                                                  "padding": 4,
                                                  "paddingLeft": 10,
                                                  "paddingRight": 10,
                                                },
                                              }
                                            }
                                            style={
                                              Object {
                                                "padding": 4,
                                                "paddingLeft": 10,
                                                "paddingRight": 10,
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root justify-content-start css-46bh2p-MuiCardContent-root"
                                              style={
                                                Object {
                                                  "padding": 4,
                                                  "paddingLeft": 10,
                                                  "paddingRight": 10,
                                                }
                                              }
                                            >
                                              <ForwardRef(Typography)
                                                gutterBottom={true}
                                                variant="h6"
                                              >
                                                <MuiTypographyRoot
                                                  as="h6"
                                                  className="MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom"
                                                  ownerState={
                                                    Object {
                                                      "align": "inherit",
                                                      "children": Array [
                                                        "ID: ",
                                                        1800,
                                                        <ForwardRef(Chip)
                                                          color="secondary"
                                                          icon={<Memo />}
                                                          id="YouTube-icon"
                                                          label="YouTube"
                                                          size="small"
                                                          style={
                                                            Object {
                                                              "marginLeft": 12,
                                                            }
                                                          }
                                                          variant="outlined"
                                                        />,
                                                        false,
                                                        false,
                                                      ],
                                                      "className": undefined,
                                                      "color": undefined,
                                                      "component": undefined,
                                                      "gutterBottom": true,
                                                      "noWrap": false,
                                                      "paragraph": false,
                                                      "sx": Object {
                                                        "color": undefined,
                                                      },
                                                      "variant": "h6",
                                                      "variantMapping": Object {
                                                        "body1": "p",
                                                        "body2": "p",
                                                        "h1": "h1",
                                                        "h2": "h2",
                                                        "h3": "h3",
                                                        "h4": "h4",
                                                        "h5": "h5",
                                                        "h6": "h6",
                                                        "inherit": "p",
                                                        "subtitle1": "h6",
                                                        "subtitle2": "h6",
                                                      },
                                                    }
                                                  }
                                                  sx={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                >
                                                  <h6
                                                    className="MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-18k87ye-MuiTypography-root"
                                                  >
                                                    ID: 
                                                    1800
                                                    <ForwardRef(Chip)
                                                      color="secondary"
                                                      icon={<Memo />}
                                                      id="YouTube-icon"
                                                      label="YouTube"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "marginLeft": 12,
                                                        }
                                                      }
                                                      variant="outlined"
                                                    >
                                                      <MuiChipRoot
                                                        as="div"
                                                        className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorSecondary MuiChip-outlinedSecondary"
                                                        id="YouTube-icon"
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        ownerState={
                                                          Object {
                                                            "clickable": undefined,
                                                            "color": "secondary",
                                                            "component": "div",
                                                            "disabled": false,
                                                            "icon": <Memo />,
                                                            "id": "YouTube-icon",
                                                            "label": "YouTube",
                                                            "onDelete": false,
                                                            "size": "small",
                                                            "style": Object {
                                                              "marginLeft": 12,
                                                            },
                                                            "variant": "outlined",
                                                          }
                                                        }
                                                        style={
                                                          Object {
                                                            "marginLeft": 12,
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorSecondary MuiChip-outlinedSecondary css-34sciq-MuiChip-root"
                                                          id="YouTube-icon"
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          style={
                                                            Object {
                                                              "marginLeft": 12,
                                                            }
                                                          }
                                                        >
                                                          <ForwardRef(YouTubeIcon)
                                                            className="MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              className="MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary"
                                                              data-testid="YouTubeIcon"
                                                            >
                                                              <MuiSvgIconRoot
                                                                aria-hidden={true}
                                                                as="svg"
                                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary"
                                                                data-testid="YouTubeIcon"
                                                                focusable="false"
                                                                ownerState={
                                                                  Object {
                                                                    "children": <path
                                                                      d="M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z"
                                                                    />,
                                                                    "className": "MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary",
                                                                    "color": "inherit",
                                                                    "component": "svg",
                                                                    "data-testid": "YouTubeIcon",
                                                                    "fontSize": "medium",
                                                                    "viewBox": "0 0 24 24",
                                                                  }
                                                                }
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary css-i4bv87-MuiSvgIcon-root"
                                                                  data-testid="YouTubeIcon"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z"
                                                                  />
                                                                </svg>
                                                              </MuiSvgIconRoot>
                                                            </ForwardRef(SvgIcon)>
                                                          </ForwardRef(YouTubeIcon)>
                                                          <MuiChipLabel
                                                            className="MuiChip-label MuiChip-labelSmall"
                                                            ownerState={
                                                              Object {
                                                                "clickable": undefined,
                                                                "color": "secondary",
                                                                "component": "div",
                                                                "disabled": false,
                                                                "icon": <Memo />,
                                                                "id": "YouTube-icon",
                                                                "label": "YouTube",
                                                                "onDelete": false,
                                                                "size": "small",
                                                                "style": Object {
                                                                  "marginLeft": 12,
                                                                },
                                                                "variant": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiChip-label MuiChip-labelSmall css-wjsjww-MuiChip-label"
                                                            >
                                                              YouTube
                                                            </span>
                                                          </MuiChipLabel>
                                                        </div>
                                                      </MuiChipRoot>
                                                    </ForwardRef(Chip)>
                                                  </h6>
                                                </MuiTypographyRoot>
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)
                                                style={
                                                  Object {
                                                    "maxHeight": 48,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                <MuiTypographyRoot
                                                  as="p"
                                                  className="MuiTypography-root MuiTypography-body1"
                                                  ownerState={
                                                    Object {
                                                      "align": "inherit",
                                                      "children": "Лекция 3.5.2 | Классический закон сложения скоростей | А",
                                                      "className": undefined,
                                                      "color": undefined,
                                                      "component": undefined,
                                                      "gutterBottom": false,
                                                      "noWrap": false,
                                                      "paragraph": false,
                                                      "style": Object {
                                                        "maxHeight": 48,
                                                        "overflow": "hidden",
                                                      },
                                                      "sx": Object {
                                                        "color": undefined,
                                                      },
                                                      "variant": "body1",
                                                      "variantMapping": Object {
                                                        "body1": "p",
                                                        "body2": "p",
                                                        "h1": "h1",
                                                        "h2": "h2",
                                                        "h3": "h3",
                                                        "h4": "h4",
                                                        "h5": "h5",
                                                        "h6": "h6",
                                                        "inherit": "p",
                                                        "subtitle1": "h6",
                                                        "subtitle2": "h6",
                                                      },
                                                    }
                                                  }
                                                  style={
                                                    Object {
                                                      "maxHeight": 48,
                                                      "overflow": "hidden",
                                                    }
                                                  }
                                                  sx={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
                                                    style={
                                                      Object {
                                                        "maxHeight": 48,
                                                        "overflow": "hidden",
                                                      }
                                                    }
                                                  >
                                                    Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                  </p>
                                                </MuiTypographyRoot>
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)>
                                                <MuiTypographyRoot
                                                  as="p"
                                                  className="MuiTypography-root MuiTypography-body1"
                                                  ownerState={
                                                    Object {
                                                      "align": "inherit",
                                                      "children": Array [
                                                        <Popover
                                                          content={
                                                            Array [
                                                              <div>
                                                                Лекции Лекториум / Физика / Кинематика
                                                              </div>,
                                                            ]
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          overlayStyle={Object {}}
                                                          placement="top"
                                                          title="Темы карточки"
                                                          trigger="hover"
                                                        >
                                                          <ForwardRef(Chip)
                                                            label="Кинематика"
                                                            size="small"
                                                            variant="outlined"
                                                          />
                                                        </Popover>,
                                                        <br />,
                                                        <ForwardRef(Chip)
                                                          className="mt-1"
                                                          label="А.С. Чирцов"
                                                          variant="outlined"
                                                        />,
                                                      ],
                                                      "className": undefined,
                                                      "color": undefined,
                                                      "component": undefined,
                                                      "gutterBottom": false,
                                                      "noWrap": false,
                                                      "paragraph": false,
                                                      "sx": Object {
                                                        "color": undefined,
                                                      },
                                                      "variant": "body1",
                                                      "variantMapping": Object {
                                                        "body1": "p",
                                                        "body2": "p",
                                                        "h1": "h1",
                                                        "h2": "h2",
                                                        "h3": "h3",
                                                        "h4": "h4",
                                                        "h5": "h5",
                                                        "h6": "h6",
                                                        "inherit": "p",
                                                        "subtitle1": "h6",
                                                        "subtitle2": "h6",
                                                      },
                                                    }
                                                  }
                                                  sx={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
                                                  >
                                                    <Popover
                                                      content={
                                                        Array [
                                                          <div>
                                                            Лекции Лекториум / Физика / Кинематика
                                                          </div>,
                                                        ]
                                                      }
                                                      mouseEnterDelay={0.1}
                                                      mouseLeaveDelay={0.1}
                                                      overlayStyle={Object {}}
                                                      placement="top"
                                                      title="Темы карточки"
                                                      trigger="hover"
                                                    >
                                                      <Tooltip
                                                        arrowPointAtCenter={false}
                                                        autoAdjustOverflow={true}
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        overlay={
                                                          <React.Fragment>
                                                            <div
                                                              className="ant-popover-title"
                                                            >
                                                              Темы карточки
                                                            </div>
                                                            <div
                                                              className="ant-popover-inner-content"
                                                            >
                                                              <div>
                                                                Лекции Лекториум / Физика / Кинематика
                                                              </div>
                                                            </div>
                                                          </React.Fragment>
                                                        }
                                                        overlayStyle={Object {}}
                                                        placement="top"
                                                        prefixCls="ant-popover"
                                                        transitionName="ant-zoom-big"
                                                        trigger="hover"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          arrowContent={
                                                            <span
                                                              className="ant-popover-arrow-content"
                                                            />
                                                          }
                                                          arrowPointAtCenter={false}
                                                          autoAdjustOverflow={true}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tc",
                                                                  "bc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "left": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cr",
                                                                  "cl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "right": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cl",
                                                                  "cr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "top": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bc",
                                                                  "tc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          motion={
                                                            Object {
                                                              "motionDeadline": 1000,
                                                              "motionName": "ant-zoom-big",
                                                            }
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onVisibleChange={[Function]}
                                                          overlay={
                                                            <React.Fragment>
                                                              <div
                                                                className="ant-popover-title"
                                                              >
                                                                Темы карточки
                                                              </div>
                                                              <div
                                                                className="ant-popover-inner-content"
                                                              >
                                                                <div>
                                                                  Лекции Лекториум / Физика / Кинематика
                                                                </div>
                                                              </div>
                                                            </React.Fragment>
                                                          }
                                                          overlayClassName=""
                                                          overlayStyle={Object {}}
                                                          placement="top"
                                                          prefixCls="ant-popover"
                                                          transitionName="ant-zoom-big"
                                                          trigger="hover"
                                                          visible={false}
                                                        >
                                                          <Trigger
                                                            action="hover"
                                                            afterPopupVisibleChange={[Function]}
                                                            arrowContent={
                                                              <span
                                                                className="ant-popover-arrow-content"
                                                              />
                                                            }
                                                            arrowPointAtCenter={false}
                                                            autoAdjustOverflow={true}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tc",
                                                                    "bc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "left": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cr",
                                                                    "cl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "right": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cl",
                                                                    "cr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "top": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bc",
                                                                    "tc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0.1}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            overlay={
                                                              <React.Fragment>
                                                                <div
                                                                  className="ant-popover-title"
                                                                >
                                                                  Темы карточки
                                                                </div>
                                                                <div
                                                                  className="ant-popover-inner-content"
                                                                >
                                                                  <div>
                                                                    Лекции Лекториум / Физика / Кинематика
                                                                  </div>
                                                                </div>
                                                              </React.Fragment>
                                                            }
                                                            popup={[Function]}
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupMotion={
                                                              Object {
                                                                "motionDeadline": 1000,
                                                                "motionName": "ant-zoom-big",
                                                              }
                                                            }
                                                            popupPlacement="top"
                                                            popupStyle={Object {}}
                                                            popupTransitionName="ant-zoom-big"
                                                            popupVisible={false}
                                                            prefixCls="ant-popover"
                                                            showAction={Array []}
                                                            visible={false}
                                                          >
                                                            <ForwardRef(Chip)
                                                              key="trigger"
                                                              label="Кинематика"
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                              size="small"
                                                              variant="outlined"
                                                            >
                                                              <MuiChipRoot
                                                                as="div"
                                                                className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorDefault MuiChip-outlinedDefault"
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                ownerState={
                                                                  Object {
                                                                    "clickable": undefined,
                                                                    "color": "default",
                                                                    "component": "div",
                                                                    "disabled": false,
                                                                    "label": "Кинематика",
                                                                    "onBlur": undefined,
                                                                    "onClick": undefined,
                                                                    "onContextMenu": undefined,
                                                                    "onDelete": false,
                                                                    "onFocus": undefined,
                                                                    "onMouseDown": undefined,
                                                                    "onMouseEnter": [Function],
                                                                    "onMouseLeave": [Function],
                                                                    "onTouchStart": undefined,
                                                                    "size": "small",
                                                                    "variant": "outlined",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorDefault MuiChip-outlinedDefault css-911tg4-MuiChip-root"
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                >
                                                                  <MuiChipLabel
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                    ownerState={
                                                                      Object {
                                                                        "clickable": undefined,
                                                                        "color": "default",
                                                                        "component": "div",
                                                                        "disabled": false,
                                                                        "label": "Кинематика",
                                                                        "onBlur": undefined,
                                                                        "onClick": undefined,
                                                                        "onContextMenu": undefined,
                                                                        "onDelete": false,
                                                                        "onFocus": undefined,
                                                                        "onMouseDown": undefined,
                                                                        "onMouseEnter": [Function],
                                                                        "onMouseLeave": [Function],
                                                                        "onTouchStart": undefined,
                                                                        "size": "small",
                                                                        "variant": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiChip-label MuiChip-labelSmall css-wjsjww-MuiChip-label"
                                                                    >
                                                                      Кинематика
                                                                    </span>
                                                                  </MuiChipLabel>
                                                                </div>
                                                              </MuiChipRoot>
                                                            </ForwardRef(Chip)>
                                                          </Trigger>
                                                        </ForwardRef(Tooltip)>
                                                      </Tooltip>
                                                    </Popover>
                                                    <br />
                                                    <ForwardRef(Chip)
                                                      className="mt-1"
                                                      label="А.С. Чирцов"
                                                      variant="outlined"
                                                    >
                                                      <MuiChipRoot
                                                        as="div"
                                                        className="MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorDefault MuiChip-outlinedDefault mt-1"
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        ownerState={
                                                          Object {
                                                            "className": "mt-1",
                                                            "clickable": undefined,
                                                            "color": "default",
                                                            "component": "div",
                                                            "disabled": false,
                                                            "label": "А.С. Чирцов",
                                                            "onDelete": false,
                                                            "size": "medium",
                                                            "variant": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorDefault MuiChip-outlinedDefault mt-1 css-132vamb-MuiChip-root"
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                        >
                                                          <MuiChipLabel
                                                            className="MuiChip-label MuiChip-labelMedium"
                                                            ownerState={
                                                              Object {
                                                                "className": "mt-1",
                                                                "clickable": undefined,
                                                                "color": "default",
                                                                "component": "div",
                                                                "disabled": false,
                                                                "label": "А.С. Чирцов",
                                                                "onDelete": false,
                                                                "size": "medium",
                                                                "variant": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiChip-label MuiChip-labelMedium css-6od3lo-MuiChip-label"
                                                            >
                                                              А.С. Чирцов
                                                            </span>
                                                          </MuiChipLabel>
                                                        </div>
                                                      </MuiChipRoot>
                                                    </ForwardRef(Chip)>
                                                  </p>
                                                </MuiTypographyRoot>
                                              </ForwardRef(Typography)>
                                              <br />
                                              <br />
                                            </div>
                                          </MuiCardContentRoot>
                                        </ForwardRef(CardContent)>
                                        <MuiCardActionAreaFocusHighlight
                                          className="MuiCardActionArea-focusHighlight"
                                          ownerState={
                                            Object {
                                              "children": <ForwardRef(CardContent)
                                                className="justify-content-start"
                                                style={
                                                  Object {
                                                    "padding": 4,
                                                    "paddingLeft": 10,
                                                    "paddingRight": 10,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Typography)
                                                  gutterBottom={true}
                                                  variant="h6"
                                                >
                                                  ID: 
                                                  1800
                                                  <ForwardRef(Chip)
                                                    color="secondary"
                                                    icon={<Memo />}
                                                    id="YouTube-icon"
                                                    label="YouTube"
                                                    size="small"
                                                    style={
                                                      Object {
                                                        "marginLeft": 12,
                                                      }
                                                    }
                                                    variant="outlined"
                                                  />
                                                </ForwardRef(Typography)>
                                                <ForwardRef(Typography)
                                                  style={
                                                    Object {
                                                      "maxHeight": 48,
                                                      "overflow": "hidden",
                                                    }
                                                  }
                                                >
                                                  Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                </ForwardRef(Typography)>
                                                <ForwardRef(Typography)>
                                                  <Popover
                                                    content={
                                                      Array [
                                                        <div>
                                                          Лекции Лекториум / Физика / Кинематика
                                                        </div>,
                                                      ]
                                                    }
                                                    mouseEnterDelay={0.1}
                                                    mouseLeaveDelay={0.1}
                                                    overlayStyle={Object {}}
                                                    placement="top"
                                                    title="Темы карточки"
                                                    trigger="hover"
                                                  >
                                                    <ForwardRef(Chip)
                                                      label="Кинематика"
                                                      size="small"
                                                      variant="outlined"
                                                    />
                                                  </Popover>
                                                  <br />
                                                  <ForwardRef(Chip)
                                                    className="mt-1"
                                                    label="А.С. Чирцов"
                                                    variant="outlined"
                                                  />
                                                </ForwardRef(Typography)>
                                                <br />
                                                <br />
                                              </ForwardRef(CardContent)>,
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiCardActionArea-focusHighlight css-1v2exvi-MuiCardActionArea-focusHighlight"
                                          />
                                        </MuiCardActionAreaFocusHighlight>
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                        >
                                          <MuiTouchRippleRoot
                                            className="MuiTouchRipple-root"
                                          >
                                            <span
                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </MuiTouchRippleRoot>
                                        </ForwardRef(TouchRipple)>
                                      </button>
                                    </MuiButtonBaseRoot>
                                  </ForwardRef(ButtonBase)>
                                </MuiCardActionAreaRoot>
                              </ForwardRef(CardActionArea)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
          </MuiCardRoot>
        </ForwardRef(Card)>
      </div>
    </CardMicroView>
  </ApolloProvider>
</MockedProvider>
`;

exports[`CardMicroView Testing Check that layout of component without data doesn't change 1`] = `
<MockedProvider
  addTypename={false}
  mocks={
    Array [
      Object {
        "request": Object {
          "query": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": undefined,
                      "arguments": Array [
                        Object {
                          "kind": "Argument",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                          "value": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "cardById",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "title",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardContentType",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "videoUrl",
                            },
                            "selectionSet": undefined,
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "subTheme",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "theme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "globalTheme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                          Object {
                            "alias": undefined,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "author",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "name",
                                  },
                                  "selectionSet": undefined,
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [
                  Object {
                    "defaultValue": undefined,
                    "directives": Array [],
                    "kind": "VariableDefinition",
                    "type": Object {
                      "kind": "NonNullType",
                      "type": Object {
                        "kind": "NamedType",
                        "name": Object {
                          "kind": "Name",
                          "value": "ID",
                        },
                      },
                    },
                    "variable": Object {
                      "kind": "Variable",
                      "name": Object {
                        "kind": "Name",
                        "value": "id",
                      },
                    },
                  },
                ],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 527,
              "start": 0,
            },
          },
          "variables": Object {
            "id": 1800,
          },
        },
        "result": Object {
          "data": Object {
            "cardById": Object {
              "author": Array [
                Object {
                  "id": 6,
                  "name": "А.С. Чирцов",
                },
              ],
              "cardContentType": "A_0",
              "id": 1800,
              "subTheme": Array [
                Object {
                  "id": 50,
                  "name": "Кинематика",
                  "theme": Object {
                    "globalTheme": Object {
                      "id": 38,
                      "name": "Лекции Лекториум",
                    },
                    "id": 49,
                    "name": "Физика",
                  },
                },
              ],
              "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
              "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
            },
          },
        },
      },
    ]
  }
>
  <ApolloProvider
    client={
      ApolloClient {
        "cache": InMemoryCache {
          "addTypename": false,
          "config": Object {
            "addTypename": false,
            "dataIdFromObject": [Function],
            "resultCaching": true,
            "typePolicies": Object {},
          },
          "data": Root {
            "canRead": [Function],
            "data": Object {
              "ROOT_QUERY": Object {
                "__typename": "Query",
                "cardById({\\"id\\":1800})": Object {
                  "author": Array [
                    Object {
                      "id": 6,
                      "name": "А.С. Чирцов",
                    },
                  ],
                  "cardContentType": "A_0",
                  "id": 1800,
                  "subTheme": Array [
                    Object {
                      "id": 50,
                      "name": "Кинематика",
                      "theme": Object {
                        "globalTheme": Object {
                          "id": 38,
                          "name": "Лекции Лекториум",
                        },
                        "id": 49,
                        "name": "Физика",
                      },
                    },
                  ],
                  "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                  "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                },
              },
            },
            "getFieldValue": [Function],
            "group": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weak": WeakMap {},
                "weakness": true,
              },
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "refs": Object {},
            "rootIds": Object {
              "ROOT_QUERY": 1,
            },
            "sharedLayerGroup": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "storageTrie": Trie {
              "makeData": [Function],
              "weakness": true,
            },
            "toReference": [Function],
          },
          "evict": [Function],
          "getFragmentDoc": [Function],
          "makeVar": [Function],
          "maybeBroadcastWatch": [Function],
          "modify": [Function],
          "optimisticData": Root {
            "canRead": [Function],
            "data": Object {
              "ROOT_QUERY": Object {
                "__typename": "Query",
                "cardById({\\"id\\":1800})": Object {
                  "author": Array [
                    Object {
                      "id": 6,
                      "name": "А.С. Чирцов",
                    },
                  ],
                  "cardContentType": "A_0",
                  "id": 1800,
                  "subTheme": Array [
                    Object {
                      "id": 50,
                      "name": "Кинематика",
                      "theme": Object {
                        "globalTheme": Object {
                          "id": 38,
                          "name": "Лекции Лекториум",
                        },
                        "id": 49,
                        "name": "Физика",
                      },
                    },
                  ],
                  "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                  "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                },
              },
            },
            "getFieldValue": [Function],
            "group": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weak": WeakMap {},
                "weakness": true,
              },
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "refs": Object {},
            "rootIds": Object {
              "ROOT_QUERY": 1,
            },
            "sharedLayerGroup": CacheGroup {
              "caching": true,
              "d": [Function],
              "keyMaker": Trie {
                "makeData": [Function],
                "weakness": true,
              },
            },
            "storageTrie": Trie {
              "makeData": [Function],
              "weakness": true,
            },
            "toReference": [Function],
          },
          "policies": Policies {
            "cache": [Circular],
            "config": Object {
              "cache": [Circular],
              "dataIdFromObject": [Function],
              "possibleTypes": undefined,
              "typePolicies": Object {},
            },
            "fuzzySubtypes": Map {},
            "rootIdsByTypename": Object {
              "Mutation": "ROOT_MUTATION",
              "Query": "ROOT_QUERY",
              "Subscription": "ROOT_SUBSCRIPTION",
            },
            "rootTypenamesById": Object {
              "ROOT_MUTATION": "Mutation",
              "ROOT_QUERY": "Query",
              "ROOT_SUBSCRIPTION": "Subscription",
            },
            "supertypeMap": Map {},
            "toBeAdded": Object {},
            "typePolicies": Object {
              "Query": Object {
                "fields": Object {},
              },
            },
            "usingPossibleTypes": false,
          },
          "reset": [Function],
          "storeReader": StoreReader {
            "config": Object {
              "addTypename": false,
              "cache": [Circular],
            },
            "executeSelectionSet": [Function],
            "executeSubSelectedArray": [Function],
            "knownResults": WeakMap {},
          },
          "storeWriter": StoreWriter {
            "cache": [Circular],
            "reader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
          },
          "txCount": 0,
          "typenameDocumentCache": Map {},
          "watchDep": [Function],
          "watches": Set {
            Object {
              "callback": [Function],
              "optimistic": true,
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "cardById",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "title",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardContentType",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "videoUrl",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "subTheme",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "theme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "globalTheme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "author",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "ID",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 527,
                  "start": 0,
                },
              },
              "variables": Object {
                "id": 1800,
              },
            },
          },
        },
        "clearStoreCallbacks": Array [],
        "defaultOptions": Object {},
        "disableNetworkFetches": false,
        "link": MockLink {
          "addTypename": false,
          "mockedResponsesByKey": Object {
            "{\\"query\\":\\"query GET_CARD_FOR_MICRO_VIEW_BY_ID($id: ID!) {\\\\n  cardById(id: $id) {\\\\n    id\\\\n    title\\\\n    cardContentType\\\\n    videoUrl\\\\n    subTheme {\\\\n      id\\\\n      name\\\\n      theme {\\\\n        id\\\\n        name\\\\n        globalTheme {\\\\n          id\\\\n          name\\\\n        }\\\\n      }\\\\n    }\\\\n    author {\\\\n      id\\\\n      name\\\\n    }\\\\n  }\\\\n}\\\\n\\"}": Array [],
          },
          "operation": Object {
            "extensions": Object {},
            "operationName": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
            "query": Object {
              "definitions": Array [
                Object {
                  "directives": Array [],
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [
                          Object {
                            "kind": "Argument",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "value": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                            },
                          },
                        ],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "cardById",
                        },
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "title",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cardContentType",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "videoUrl",
                              },
                              "selectionSet": undefined,
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "subTheme",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "theme",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "globalTheme",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                            Object {
                              "alias": undefined,
                              "arguments": Array [],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "author",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "name",
                                    },
                                    "selectionSet": undefined,
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                  "variableDefinitions": Array [
                    Object {
                      "defaultValue": undefined,
                      "directives": Array [],
                      "kind": "VariableDefinition",
                      "type": Object {
                        "kind": "NonNullType",
                        "type": Object {
                          "kind": "NamedType",
                          "name": Object {
                            "kind": "Name",
                            "value": "ID",
                          },
                        },
                      },
                      "variable": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "id",
                        },
                      },
                    },
                  ],
                },
              ],
              "kind": "Document",
              "loc": Object {
                "end": 527,
                "start": 0,
              },
            },
            "variables": Object {
              "id": 1800,
            },
          },
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "evict": [Function],
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "modify": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "reset": [Function],
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {
              Object {
                "callback": [Function],
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardById",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cardContentType",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "videoUrl",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "subTheme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "theme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "globalTheme",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "author",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "directives": Array [],
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "ID",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 527,
                    "start": 0,
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
            },
          },
          "client": [Circular],
        },
        "mutate": [Function],
        "query": [Function],
        "queryDeduplication": true,
        "queryManager": QueryManager {
          "assumeImmutableResults": false,
          "cache": InMemoryCache {
            "addTypename": false,
            "config": Object {
              "addTypename": false,
              "dataIdFromObject": [Function],
              "resultCaching": true,
              "typePolicies": Object {},
            },
            "data": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "evict": [Function],
            "getFragmentDoc": [Function],
            "makeVar": [Function],
            "maybeBroadcastWatch": [Function],
            "modify": [Function],
            "optimisticData": Root {
              "canRead": [Function],
              "data": Object {
                "ROOT_QUERY": Object {
                  "__typename": "Query",
                  "cardById({\\"id\\":1800})": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "getFieldValue": [Function],
              "group": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weak": WeakMap {},
                  "weakness": true,
                },
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "refs": Object {},
              "rootIds": Object {
                "ROOT_QUERY": 1,
              },
              "sharedLayerGroup": CacheGroup {
                "caching": true,
                "d": [Function],
                "keyMaker": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
              },
              "storageTrie": Trie {
                "makeData": [Function],
                "weakness": true,
              },
              "toReference": [Function],
            },
            "policies": Policies {
              "cache": [Circular],
              "config": Object {
                "cache": [Circular],
                "dataIdFromObject": [Function],
                "possibleTypes": undefined,
                "typePolicies": Object {},
              },
              "fuzzySubtypes": Map {},
              "rootIdsByTypename": Object {
                "Mutation": "ROOT_MUTATION",
                "Query": "ROOT_QUERY",
                "Subscription": "ROOT_SUBSCRIPTION",
              },
              "rootTypenamesById": Object {
                "ROOT_MUTATION": "Mutation",
                "ROOT_QUERY": "Query",
                "ROOT_SUBSCRIPTION": "Subscription",
              },
              "supertypeMap": Map {},
              "toBeAdded": Object {},
              "typePolicies": Object {
                "Query": Object {
                  "fields": Object {},
                },
              },
              "usingPossibleTypes": false,
            },
            "reset": [Function],
            "storeReader": StoreReader {
              "config": Object {
                "addTypename": false,
                "cache": [Circular],
              },
              "executeSelectionSet": [Function],
              "executeSubSelectedArray": [Function],
              "knownResults": WeakMap {},
            },
            "storeWriter": StoreWriter {
              "cache": [Circular],
              "reader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
            },
            "txCount": 0,
            "typenameDocumentCache": Map {},
            "watchDep": [Function],
            "watches": Set {
              Object {
                "callback": [Function],
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardById",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cardContentType",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "videoUrl",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "subTheme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "theme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "globalTheme",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "author",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "directives": Array [],
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "ID",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 527,
                    "start": 0,
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
            },
          },
          "clientAwareness": Object {
            "name": undefined,
            "version": undefined,
          },
          "fetchCancelFns": Map {},
          "inFlightLinkObservables": Map {},
          "link": MockLink {
            "addTypename": false,
            "mockedResponsesByKey": Object {
              "{\\"query\\":\\"query GET_CARD_FOR_MICRO_VIEW_BY_ID($id: ID!) {\\\\n  cardById(id: $id) {\\\\n    id\\\\n    title\\\\n    cardContentType\\\\n    videoUrl\\\\n    subTheme {\\\\n      id\\\\n      name\\\\n      theme {\\\\n        id\\\\n        name\\\\n        globalTheme {\\\\n          id\\\\n          name\\\\n        }\\\\n      }\\\\n    }\\\\n    author {\\\\n      id\\\\n      name\\\\n    }\\\\n  }\\\\n}\\\\n\\"}": Array [],
            },
            "operation": Object {
              "extensions": Object {},
              "operationName": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
              "query": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "cardById",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "title",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardContentType",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "videoUrl",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "subTheme",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "theme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "globalTheme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "author",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "ID",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 527,
                  "start": 0,
                },
              },
              "variables": Object {
                "id": 1800,
              },
            },
          },
          "localState": LocalState {
            "cache": InMemoryCache {
              "addTypename": false,
              "config": Object {
                "addTypename": false,
                "dataIdFromObject": [Function],
                "resultCaching": true,
                "typePolicies": Object {},
              },
              "data": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "cardById({\\"id\\":1800})": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "evict": [Function],
              "getFragmentDoc": [Function],
              "makeVar": [Function],
              "maybeBroadcastWatch": [Function],
              "modify": [Function],
              "optimisticData": Root {
                "canRead": [Function],
                "data": Object {
                  "ROOT_QUERY": Object {
                    "__typename": "Query",
                    "cardById({\\"id\\":1800})": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                },
                "getFieldValue": [Function],
                "group": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weak": WeakMap {},
                    "weakness": true,
                  },
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "refs": Object {},
                "rootIds": Object {
                  "ROOT_QUERY": 1,
                },
                "sharedLayerGroup": CacheGroup {
                  "caching": true,
                  "d": [Function],
                  "keyMaker": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                },
                "storageTrie": Trie {
                  "makeData": [Function],
                  "weakness": true,
                },
                "toReference": [Function],
              },
              "policies": Policies {
                "cache": [Circular],
                "config": Object {
                  "cache": [Circular],
                  "dataIdFromObject": [Function],
                  "possibleTypes": undefined,
                  "typePolicies": Object {},
                },
                "fuzzySubtypes": Map {},
                "rootIdsByTypename": Object {
                  "Mutation": "ROOT_MUTATION",
                  "Query": "ROOT_QUERY",
                  "Subscription": "ROOT_SUBSCRIPTION",
                },
                "rootTypenamesById": Object {
                  "ROOT_MUTATION": "Mutation",
                  "ROOT_QUERY": "Query",
                  "ROOT_SUBSCRIPTION": "Subscription",
                },
                "supertypeMap": Map {},
                "toBeAdded": Object {},
                "typePolicies": Object {
                  "Query": Object {
                    "fields": Object {},
                  },
                },
                "usingPossibleTypes": false,
              },
              "reset": [Function],
              "storeReader": StoreReader {
                "config": Object {
                  "addTypename": false,
                  "cache": [Circular],
                },
                "executeSelectionSet": [Function],
                "executeSubSelectedArray": [Function],
                "knownResults": WeakMap {},
              },
              "storeWriter": StoreWriter {
                "cache": [Circular],
                "reader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
              },
              "txCount": 0,
              "typenameDocumentCache": Map {},
              "watchDep": [Function],
              "watches": Set {
                Object {
                  "callback": [Function],
                  "optimistic": true,
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cardById",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "title",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cardContentType",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "videoUrl",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "subTheme",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "theme",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "globalTheme",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "name",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "author",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "directives": Array [],
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "ID",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 527,
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "id": 1800,
                  },
                },
              },
            },
            "client": [Circular],
          },
          "mutationIdCounter": 1,
          "onBroadcast": undefined,
          "queries": Map {
            "1" => QueryInfo {
              "cache": InMemoryCache {
                "addTypename": false,
                "config": Object {
                  "addTypename": false,
                  "dataIdFromObject": [Function],
                  "resultCaching": true,
                  "typePolicies": Object {},
                },
                "data": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "cardById({\\"id\\":1800})": Object {
                        "author": Array [
                          Object {
                            "id": 6,
                            "name": "А.С. Чирцов",
                          },
                        ],
                        "cardContentType": "A_0",
                        "id": 1800,
                        "subTheme": Array [
                          Object {
                            "id": 50,
                            "name": "Кинематика",
                            "theme": Object {
                              "globalTheme": Object {
                                "id": 38,
                                "name": "Лекции Лекториум",
                              },
                              "id": 49,
                              "name": "Физика",
                            },
                          },
                        ],
                        "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                        "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                      },
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "evict": [Function],
                "getFragmentDoc": [Function],
                "makeVar": [Function],
                "maybeBroadcastWatch": [Function],
                "modify": [Function],
                "optimisticData": Root {
                  "canRead": [Function],
                  "data": Object {
                    "ROOT_QUERY": Object {
                      "__typename": "Query",
                      "cardById({\\"id\\":1800})": Object {
                        "author": Array [
                          Object {
                            "id": 6,
                            "name": "А.С. Чирцов",
                          },
                        ],
                        "cardContentType": "A_0",
                        "id": 1800,
                        "subTheme": Array [
                          Object {
                            "id": 50,
                            "name": "Кинематика",
                            "theme": Object {
                              "globalTheme": Object {
                                "id": 38,
                                "name": "Лекции Лекториум",
                              },
                              "id": 49,
                              "name": "Физика",
                            },
                          },
                        ],
                        "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                        "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                      },
                    },
                  },
                  "getFieldValue": [Function],
                  "group": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weak": WeakMap {},
                      "weakness": true,
                    },
                  },
                  "policies": Policies {
                    "cache": [Circular],
                    "config": Object {
                      "cache": [Circular],
                      "dataIdFromObject": [Function],
                      "possibleTypes": undefined,
                      "typePolicies": Object {},
                    },
                    "fuzzySubtypes": Map {},
                    "rootIdsByTypename": Object {
                      "Mutation": "ROOT_MUTATION",
                      "Query": "ROOT_QUERY",
                      "Subscription": "ROOT_SUBSCRIPTION",
                    },
                    "rootTypenamesById": Object {
                      "ROOT_MUTATION": "Mutation",
                      "ROOT_QUERY": "Query",
                      "ROOT_SUBSCRIPTION": "Subscription",
                    },
                    "supertypeMap": Map {},
                    "toBeAdded": Object {},
                    "typePolicies": Object {
                      "Query": Object {
                        "fields": Object {},
                      },
                    },
                    "usingPossibleTypes": false,
                  },
                  "refs": Object {},
                  "rootIds": Object {
                    "ROOT_QUERY": 1,
                  },
                  "sharedLayerGroup": CacheGroup {
                    "caching": true,
                    "d": [Function],
                    "keyMaker": Trie {
                      "makeData": [Function],
                      "weakness": true,
                    },
                  },
                  "storageTrie": Trie {
                    "makeData": [Function],
                    "weakness": true,
                  },
                  "toReference": [Function],
                },
                "policies": Policies {
                  "cache": [Circular],
                  "config": Object {
                    "cache": [Circular],
                    "dataIdFromObject": [Function],
                    "possibleTypes": undefined,
                    "typePolicies": Object {},
                  },
                  "fuzzySubtypes": Map {},
                  "rootIdsByTypename": Object {
                    "Mutation": "ROOT_MUTATION",
                    "Query": "ROOT_QUERY",
                    "Subscription": "ROOT_SUBSCRIPTION",
                  },
                  "rootTypenamesById": Object {
                    "ROOT_MUTATION": "Mutation",
                    "ROOT_QUERY": "Query",
                    "ROOT_SUBSCRIPTION": "Subscription",
                  },
                  "supertypeMap": Map {},
                  "toBeAdded": Object {},
                  "typePolicies": Object {
                    "Query": Object {
                      "fields": Object {},
                    },
                  },
                  "usingPossibleTypes": false,
                },
                "reset": [Function],
                "storeReader": StoreReader {
                  "config": Object {
                    "addTypename": false,
                    "cache": [Circular],
                  },
                  "executeSelectionSet": [Function],
                  "executeSubSelectedArray": [Function],
                  "knownResults": WeakMap {},
                },
                "storeWriter": StoreWriter {
                  "cache": [Circular],
                  "reader": StoreReader {
                    "config": Object {
                      "addTypename": false,
                      "cache": [Circular],
                    },
                    "executeSelectionSet": [Function],
                    "executeSubSelectedArray": [Function],
                    "knownResults": WeakMap {},
                  },
                },
                "txCount": 0,
                "typenameDocumentCache": Map {},
                "watchDep": [Function],
                "watches": Set {
                  Object {
                    "callback": [Function],
                    "optimistic": true,
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardById",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "title",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cardContentType",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "videoUrl",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "subTheme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "theme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "globalTheme",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "id",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "name",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "author",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "ID",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 527,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "id": 1800,
                    },
                  },
                },
              },
              "cancel": [Function],
              "diff": Object {
                "complete": true,
                "missing": undefined,
                "result": Object {
                  "cardById": Object {
                    "author": Array [
                      Object {
                        "id": 6,
                        "name": "А.С. Чирцов",
                      },
                    ],
                    "cardContentType": "A_0",
                    "id": 1800,
                    "subTheme": Array [
                      Object {
                        "id": 50,
                        "name": "Кинематика",
                        "theme": Object {
                          "globalTheme": Object {
                            "id": 38,
                            "name": "Лекции Лекториум",
                          },
                          "id": 49,
                          "name": "Физика",
                        },
                      },
                    ],
                    "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                    "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                  },
                },
              },
              "dirty": false,
              "document": Object {
                "definitions": Array [
                  Object {
                    "directives": Array [],
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "alias": undefined,
                          "arguments": Array [
                            Object {
                              "kind": "Argument",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                              "value": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                          "directives": Array [],
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "cardById",
                          },
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "title",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardContentType",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "videoUrl",
                                },
                                "selectionSet": undefined,
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "subTheme",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "theme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "globalTheme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                              Object {
                                "alias": undefined,
                                "arguments": Array [],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "author",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "name",
                                      },
                                      "selectionSet": undefined,
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                    "variableDefinitions": Array [
                      Object {
                        "defaultValue": undefined,
                        "directives": Array [],
                        "kind": "VariableDefinition",
                        "type": Object {
                          "kind": "NonNullType",
                          "type": Object {
                            "kind": "NamedType",
                            "name": Object {
                              "kind": "Name",
                              "value": "ID",
                            },
                          },
                        },
                        "variable": Object {
                          "kind": "Variable",
                          "name": Object {
                            "kind": "Name",
                            "value": "id",
                          },
                        },
                      },
                    ],
                  },
                ],
                "kind": "Document",
                "loc": Object {
                  "end": 527,
                  "start": 0,
                },
              },
              "graphQLErrors": Array [],
              "lastRequestId": 1,
              "lastWatch": Object {
                "callback": [Function],
                "optimistic": true,
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": undefined,
                            "arguments": Array [
                              Object {
                                "kind": "Argument",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                                "value": Object {
                                  "kind": "Variable",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                },
                              },
                            ],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "cardById",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "cardContentType",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "videoUrl",
                                  },
                                  "selectionSet": undefined,
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "subTheme",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "theme",
                                        },
                                        "selectionSet": Object {
                                          "kind": "SelectionSet",
                                          "selections": Array [
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "id",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "name",
                                              },
                                              "selectionSet": undefined,
                                            },
                                            Object {
                                              "alias": undefined,
                                              "arguments": Array [],
                                              "directives": Array [],
                                              "kind": "Field",
                                              "name": Object {
                                                "kind": "Name",
                                                "value": "globalTheme",
                                              },
                                              "selectionSet": Object {
                                                "kind": "SelectionSet",
                                                "selections": Array [
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "id",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                  Object {
                                                    "alias": undefined,
                                                    "arguments": Array [],
                                                    "directives": Array [],
                                                    "kind": "Field",
                                                    "name": Object {
                                                      "kind": "Name",
                                                      "value": "name",
                                                    },
                                                    "selectionSet": undefined,
                                                  },
                                                ],
                                              },
                                            },
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                },
                                Object {
                                  "alias": undefined,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "author",
                                  },
                                  "selectionSet": Object {
                                    "kind": "SelectionSet",
                                    "selections": Array [
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "id",
                                        },
                                        "selectionSet": undefined,
                                      },
                                      Object {
                                        "alias": undefined,
                                        "arguments": Array [],
                                        "directives": Array [],
                                        "kind": "Field",
                                        "name": Object {
                                          "kind": "Name",
                                          "value": "name",
                                        },
                                        "selectionSet": undefined,
                                      },
                                    ],
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [
                        Object {
                          "defaultValue": undefined,
                          "directives": Array [],
                          "kind": "VariableDefinition",
                          "type": Object {
                            "kind": "NonNullType",
                            "type": Object {
                              "kind": "NamedType",
                              "name": Object {
                                "kind": "Name",
                                "value": "ID",
                              },
                            },
                          },
                          "variable": Object {
                            "kind": "Variable",
                            "name": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                          },
                        },
                      ],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 527,
                    "start": 0,
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
              "lastWrite": Object {
                "dmCount": 0,
                "result": Object {
                  "data": Object {
                    "cardById": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                },
                "variables": Object {
                  "id": 1800,
                },
              },
              "listeners": Set {
                [Function],
              },
              "networkError": undefined,
              "networkStatus": 7,
              "observableQuery": ObservableQuery {
                "_subscriber": [Function],
                "isTornDown": false,
                "lastResult": Object {
                  "data": Object {
                    "cardById": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                  "loading": false,
                  "networkStatus": 7,
                },
                "lastResultSnapshot": Object {
                  "data": Object {
                    "cardById": Object {
                      "author": Array [
                        Object {
                          "id": 6,
                          "name": "А.С. Чирцов",
                        },
                      ],
                      "cardContentType": "A_0",
                      "id": 1800,
                      "subTheme": Array [
                        Object {
                          "id": 50,
                          "name": "Кинематика",
                          "theme": Object {
                            "globalTheme": Object {
                              "id": 38,
                              "name": "Лекции Лекториум",
                            },
                            "id": 49,
                            "name": "Физика",
                          },
                        },
                      ],
                      "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                      "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                    },
                  },
                  "loading": false,
                  "networkStatus": 7,
                },
                "observer": Object {
                  "error": [Function],
                  "next": [Function],
                },
                "observers": Set {
                  SubscriptionObserver {
                    "_subscription": Subscription {
                      "_cleanup": [Function],
                      "_observer": Object {
                        "error": [Function],
                        "next": [Function],
                      },
                      "_queue": undefined,
                      "_state": "ready",
                    },
                  },
                },
                "options": Object {
                  "context": undefined,
                  "displayName": "Query",
                  "fetchPolicy": "cache-first",
                  "notifyOnNetworkStatusChange": false,
                  "onCompleted": [Function],
                  "query": Object {
                    "definitions": Array [
                      Object {
                        "directives": Array [],
                        "kind": "OperationDefinition",
                        "name": Object {
                          "kind": "Name",
                          "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                        },
                        "operation": "query",
                        "selectionSet": Object {
                          "kind": "SelectionSet",
                          "selections": Array [
                            Object {
                              "alias": undefined,
                              "arguments": Array [
                                Object {
                                  "kind": "Argument",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "value": Object {
                                    "kind": "Variable",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                  },
                                },
                              ],
                              "directives": Array [],
                              "kind": "Field",
                              "name": Object {
                                "kind": "Name",
                                "value": "cardById",
                              },
                              "selectionSet": Object {
                                "kind": "SelectionSet",
                                "selections": Array [
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "title",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "cardContentType",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "videoUrl",
                                    },
                                    "selectionSet": undefined,
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "subTheme",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "theme",
                                          },
                                          "selectionSet": Object {
                                            "kind": "SelectionSet",
                                            "selections": Array [
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "id",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "name",
                                                },
                                                "selectionSet": undefined,
                                              },
                                              Object {
                                                "alias": undefined,
                                                "arguments": Array [],
                                                "directives": Array [],
                                                "kind": "Field",
                                                "name": Object {
                                                  "kind": "Name",
                                                  "value": "globalTheme",
                                                },
                                                "selectionSet": Object {
                                                  "kind": "SelectionSet",
                                                  "selections": Array [
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "id",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                    Object {
                                                      "alias": undefined,
                                                      "arguments": Array [],
                                                      "directives": Array [],
                                                      "kind": "Field",
                                                      "name": Object {
                                                        "kind": "Name",
                                                        "value": "name",
                                                      },
                                                      "selectionSet": undefined,
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  Object {
                                    "alias": undefined,
                                    "arguments": Array [],
                                    "directives": Array [],
                                    "kind": "Field",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "author",
                                    },
                                    "selectionSet": Object {
                                      "kind": "SelectionSet",
                                      "selections": Array [
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "id",
                                          },
                                          "selectionSet": undefined,
                                        },
                                        Object {
                                          "alias": undefined,
                                          "arguments": Array [],
                                          "directives": Array [],
                                          "kind": "Field",
                                          "name": Object {
                                            "kind": "Name",
                                            "value": "name",
                                          },
                                          "selectionSet": undefined,
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                        "variableDefinitions": Array [
                          Object {
                            "defaultValue": undefined,
                            "directives": Array [],
                            "kind": "VariableDefinition",
                            "type": Object {
                              "kind": "NonNullType",
                              "type": Object {
                                "kind": "NamedType",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "ID",
                                },
                              },
                            },
                            "variable": Object {
                              "kind": "Variable",
                              "name": Object {
                                "kind": "Name",
                                "value": "id",
                              },
                            },
                          },
                        ],
                      },
                    ],
                    "kind": "Document",
                    "loc": Object {
                      "end": 527,
                      "start": 0,
                    },
                  },
                  "variables": Object {
                    "id": 1800,
                  },
                },
                "queryId": "1",
                "queryInfo": [Circular],
                "queryManager": [Circular],
                "queryName": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                "reobserver": Reobserver {
                  "concast": Concast {
                    "_subscriber": [Function],
                    "addCount": 1,
                    "cancel": [Function],
                    "handlers": Object {
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "latest": Array [
                      "next",
                      Object {
                        "data": Object {
                          "cardById": Object {
                            "author": Array [
                              Object {
                                "id": 6,
                                "name": "А.С. Чирцов",
                              },
                            ],
                            "cardContentType": "A_0",
                            "id": 1800,
                            "subTheme": Array [
                              Object {
                                "id": 50,
                                "name": "Кинематика",
                                "theme": Object {
                                  "globalTheme": Object {
                                    "id": 38,
                                    "name": "Лекции Лекториум",
                                  },
                                  "id": 49,
                                  "name": "Физика",
                                },
                              },
                            ],
                            "title": "Лекция 3.5.2 | Классический закон сложения скоростей | Александр Чирцов | Лекториум",
                            "videoUrl": "https://www.youtube.com/watch?v=rVs1Nqe0Rxw",
                          },
                        },
                        "loading": false,
                        "networkStatus": 7,
                      },
                    ],
                    "observers": Set {
                      Object {
                        "error": [Function],
                        "next": [Function],
                      },
                    },
                    "promise": Promise {},
                    "reject": [Function],
                    "resolve": [Function],
                    "sources": Array [],
                    "sub": null,
                  },
                  "fetch": [Function],
                  "observer": Object {
                    "error": [Function],
                    "next": [Function],
                  },
                  "options": Object {
                    "context": undefined,
                    "displayName": "Query",
                    "fetchPolicy": "cache-first",
                    "notifyOnNetworkStatusChange": false,
                    "onCompleted": [Function],
                    "query": Object {
                      "definitions": Array [
                        Object {
                          "directives": Array [],
                          "kind": "OperationDefinition",
                          "name": Object {
                            "kind": "Name",
                            "value": "GET_CARD_FOR_MICRO_VIEW_BY_ID",
                          },
                          "operation": "query",
                          "selectionSet": Object {
                            "kind": "SelectionSet",
                            "selections": Array [
                              Object {
                                "alias": undefined,
                                "arguments": Array [
                                  Object {
                                    "kind": "Argument",
                                    "name": Object {
                                      "kind": "Name",
                                      "value": "id",
                                    },
                                    "value": Object {
                                      "kind": "Variable",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                    },
                                  },
                                ],
                                "directives": Array [],
                                "kind": "Field",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "cardById",
                                },
                                "selectionSet": Object {
                                  "kind": "SelectionSet",
                                  "selections": Array [
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "id",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "title",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "cardContentType",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "videoUrl",
                                      },
                                      "selectionSet": undefined,
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "subTheme",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "theme",
                                            },
                                            "selectionSet": Object {
                                              "kind": "SelectionSet",
                                              "selections": Array [
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "id",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "name",
                                                  },
                                                  "selectionSet": undefined,
                                                },
                                                Object {
                                                  "alias": undefined,
                                                  "arguments": Array [],
                                                  "directives": Array [],
                                                  "kind": "Field",
                                                  "name": Object {
                                                    "kind": "Name",
                                                    "value": "globalTheme",
                                                  },
                                                  "selectionSet": Object {
                                                    "kind": "SelectionSet",
                                                    "selections": Array [
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "id",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                      Object {
                                                        "alias": undefined,
                                                        "arguments": Array [],
                                                        "directives": Array [],
                                                        "kind": "Field",
                                                        "name": Object {
                                                          "kind": "Name",
                                                          "value": "name",
                                                        },
                                                        "selectionSet": undefined,
                                                      },
                                                    ],
                                                  },
                                                },
                                              ],
                                            },
                                          },
                                        ],
                                      },
                                    },
                                    Object {
                                      "alias": undefined,
                                      "arguments": Array [],
                                      "directives": Array [],
                                      "kind": "Field",
                                      "name": Object {
                                        "kind": "Name",
                                        "value": "author",
                                      },
                                      "selectionSet": Object {
                                        "kind": "SelectionSet",
                                        "selections": Array [
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "id",
                                            },
                                            "selectionSet": undefined,
                                          },
                                          Object {
                                            "alias": undefined,
                                            "arguments": Array [],
                                            "directives": Array [],
                                            "kind": "Field",
                                            "name": Object {
                                              "kind": "Name",
                                              "value": "name",
                                            },
                                            "selectionSet": undefined,
                                          },
                                        ],
                                      },
                                    },
                                  ],
                                },
                              },
                            ],
                          },
                          "variableDefinitions": Array [
                            Object {
                              "defaultValue": undefined,
                              "directives": Array [],
                              "kind": "VariableDefinition",
                              "type": Object {
                                "kind": "NonNullType",
                                "type": Object {
                                  "kind": "NamedType",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "ID",
                                  },
                                },
                              },
                              "variable": Object {
                                "kind": "Variable",
                                "name": Object {
                                  "kind": "Name",
                                  "value": "id",
                                },
                              },
                            },
                          ],
                        },
                      ],
                      "kind": "Document",
                      "loc": Object {
                        "end": 527,
                        "start": 0,
                      },
                    },
                    "variables": Object {
                      "id": 1800,
                    },
                  },
                  "shouldFetch": [Function],
                },
                "subscriptions": Set {},
              },
              "oqListener": [Function],
              "stopped": false,
              "subscriptions": Set {},
              "variables": Object {
                "id": 1800,
              },
            },
          },
          "queryDeduplication": true,
          "queryIdCounter": 2,
          "requestIdCounter": 2,
          "ssrMode": false,
          "transformCache": WeakMap {},
        },
        "reFetchObservableQueries": [Function],
        "resetStore": [Function],
        "resetStoreCallbacks": Array [],
        "typeDefs": undefined,
        "version": "3.3.17",
        "watchQuery": [Function],
      }
    }
  >
    <CardMicroView
      cardID={1800}
    >
      <div>
        <ForwardRef(Card)
          className="makeStyles-root-1"
          onClick={[Function]}
          variant="outlined"
        >
          <MuiCardRoot
            className="MuiCard-root makeStyles-root-1"
            onClick={[Function]}
            ownerState={
              Object {
                "children": <ForwardRef(Grid)
                  container={true}
                >
                  <ForwardRef(Grid)
                    item={true}
                    xs={4}
                  >
                    <ForwardRef(CardMedia)
                      image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                      style={
                        Object {
                          "height": 169,
                          "width": 132,
                        }
                      }
                    />
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    xs={8}
                  >
                    <ForwardRef(CardActionArea)>
                      <ForwardRef(CardContent)
                        className="justify-content-start"
                        style={
                          Object {
                            "padding": 4,
                            "paddingLeft": 10,
                            "paddingRight": 10,
                          }
                        }
                      >
                        <ForwardRef(Typography)
                          gutterBottom={true}
                          variant="h6"
                        >
                          ID: 
                          1800
                          <ForwardRef(Chip)
                            color="secondary"
                            icon={<Memo />}
                            id="YouTube-icon"
                            label="YouTube"
                            size="small"
                            style={
                              Object {
                                "marginLeft": 12,
                              }
                            }
                            variant="outlined"
                          />
                        </ForwardRef(Typography)>
                        <ForwardRef(Typography)
                          style={
                            Object {
                              "maxHeight": 48,
                              "overflow": "hidden",
                            }
                          }
                        >
                          Лекция 3.5.2 | Классический закон сложения скоростей | А
                        </ForwardRef(Typography)>
                        <ForwardRef(Typography)>
                          <Popover
                            content={
                              Array [
                                <div>
                                  Лекции Лекториум / Физика / Кинематика
                                </div>,
                              ]
                            }
                            mouseEnterDelay={0.1}
                            mouseLeaveDelay={0.1}
                            overlayStyle={Object {}}
                            placement="top"
                            title="Темы карточки"
                            trigger="hover"
                          >
                            <ForwardRef(Chip)
                              label="Кинематика"
                              size="small"
                              variant="outlined"
                            />
                          </Popover>
                          <br />
                          <ForwardRef(Chip)
                            className="mt-1"
                            label="А.С. Чирцов"
                            variant="outlined"
                          />
                        </ForwardRef(Typography)>
                        <br />
                        <br />
                      </ForwardRef(CardContent)>
                    </ForwardRef(CardActionArea)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>,
                "className": "makeStyles-root-1",
                "onClick": [Function],
                "raised": false,
                "variant": "outlined",
              }
            }
            variant="outlined"
          >
            <ForwardRef(Paper)
              className="MuiCard-root makeStyles-root-1 css-1gdfwye-MuiCard-root"
              onClick={[Function]}
              variant="outlined"
            >
              <MuiPaperRoot
                as="div"
                className="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root makeStyles-root-1 css-1gdfwye-MuiCard-root"
                onClick={[Function]}
                ownerState={
                  Object {
                    "children": <ForwardRef(Grid)
                      container={true}
                    >
                      <ForwardRef(Grid)
                        item={true}
                        xs={4}
                      >
                        <ForwardRef(CardMedia)
                          image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                          style={
                            Object {
                              "height": 169,
                              "width": 132,
                            }
                          }
                        />
                      </ForwardRef(Grid)>
                      <ForwardRef(Grid)
                        item={true}
                        xs={8}
                      >
                        <ForwardRef(CardActionArea)>
                          <ForwardRef(CardContent)
                            className="justify-content-start"
                            style={
                              Object {
                                "padding": 4,
                                "paddingLeft": 10,
                                "paddingRight": 10,
                              }
                            }
                          >
                            <ForwardRef(Typography)
                              gutterBottom={true}
                              variant="h6"
                            >
                              ID: 
                              1800
                              <ForwardRef(Chip)
                                color="secondary"
                                icon={<Memo />}
                                id="YouTube-icon"
                                label="YouTube"
                                size="small"
                                style={
                                  Object {
                                    "marginLeft": 12,
                                  }
                                }
                                variant="outlined"
                              />
                            </ForwardRef(Typography)>
                            <ForwardRef(Typography)
                              style={
                                Object {
                                  "maxHeight": 48,
                                  "overflow": "hidden",
                                }
                              }
                            >
                              Лекция 3.5.2 | Классический закон сложения скоростей | А
                            </ForwardRef(Typography)>
                            <ForwardRef(Typography)>
                              <Popover
                                content={
                                  Array [
                                    <div>
                                      Лекции Лекториум / Физика / Кинематика
                                    </div>,
                                  ]
                                }
                                mouseEnterDelay={0.1}
                                mouseLeaveDelay={0.1}
                                overlayStyle={Object {}}
                                placement="top"
                                title="Темы карточки"
                                trigger="hover"
                              >
                                <ForwardRef(Chip)
                                  label="Кинематика"
                                  size="small"
                                  variant="outlined"
                                />
                              </Popover>
                              <br />
                              <ForwardRef(Chip)
                                className="mt-1"
                                label="А.С. Чирцов"
                                variant="outlined"
                              />
                            </ForwardRef(Typography)>
                            <br />
                            <br />
                          </ForwardRef(CardContent)>
                        </ForwardRef(CardActionArea)>
                      </ForwardRef(Grid)>
                    </ForwardRef(Grid)>,
                    "className": "MuiCard-root makeStyles-root-1 css-1gdfwye-MuiCard-root",
                    "component": "div",
                    "elevation": 1,
                    "onClick": [Function],
                    "square": false,
                    "variant": "outlined",
                  }
                }
              >
                <div
                  className="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root makeStyles-root-1 css-1v5z4dq-MuiPaper-root-MuiCard-root"
                  onClick={[Function]}
                >
                  <ForwardRef(Grid)
                    container={true}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                              xs={4}
                            >
                              <ForwardRef(CardMedia)
                                image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                                style={
                                  Object {
                                    "height": 169,
                                    "width": 132,
                                  }
                                }
                              />
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                              xs={8}
                            >
                              <ForwardRef(CardActionArea)>
                                <ForwardRef(CardContent)
                                  className="justify-content-start"
                                  style={
                                    Object {
                                      "padding": 4,
                                      "paddingLeft": 10,
                                      "paddingRight": 10,
                                    }
                                  }
                                >
                                  <ForwardRef(Typography)
                                    gutterBottom={true}
                                    variant="h6"
                                  >
                                    ID: 
                                    1800
                                    <ForwardRef(Chip)
                                      color="secondary"
                                      icon={<Memo />}
                                      id="YouTube-icon"
                                      label="YouTube"
                                      size="small"
                                      style={
                                        Object {
                                          "marginLeft": 12,
                                        }
                                      }
                                      variant="outlined"
                                    />
                                  </ForwardRef(Typography)>
                                  <ForwardRef(Typography)
                                    style={
                                      Object {
                                        "maxHeight": 48,
                                        "overflow": "hidden",
                                      }
                                    }
                                  >
                                    Лекция 3.5.2 | Классический закон сложения скоростей | А
                                  </ForwardRef(Typography)>
                                  <ForwardRef(Typography)>
                                    <Popover
                                      content={
                                        Array [
                                          <div>
                                            Лекции Лекториум / Физика / Кинематика
                                          </div>,
                                        ]
                                      }
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      overlayStyle={Object {}}
                                      placement="top"
                                      title="Темы карточки"
                                      trigger="hover"
                                    >
                                      <ForwardRef(Chip)
                                        label="Кинематика"
                                        size="small"
                                        variant="outlined"
                                      />
                                    </Popover>
                                    <br />
                                    <ForwardRef(Chip)
                                      className="mt-1"
                                      label="А.С. Чирцов"
                                      variant="outlined"
                                    />
                                  </ForwardRef(Typography)>
                                  <br />
                                  <br />
                                </ForwardRef(CardContent)>
                              </ForwardRef(CardActionArea)>
                            </ForwardRef(Grid)>,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": false,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {},
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={Object {}}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined css-11lq3yg-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={4}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-4"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(CardMedia)
                                    image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                                    style={
                                      Object {
                                        "height": 169,
                                        "width": 132,
                                      }
                                    }
                                  />,
                                  false,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 4,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-4 css-1744jwa-MuiGrid-root"
                            >
                              <ForwardRef(CardMedia)
                                image="https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg"
                                style={
                                  Object {
                                    "height": 169,
                                    "width": 132,
                                  }
                                }
                              >
                                <MuiCardMediaRoot
                                  as="div"
                                  className="MuiCardMedia-root"
                                  ownerState={
                                    Object {
                                      "component": "div",
                                      "image": "https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg",
                                      "isImageComponent": false,
                                      "isMediaComponent": false,
                                      "style": Object {
                                        "height": 169,
                                        "width": 132,
                                      },
                                    }
                                  }
                                  role="img"
                                  style={
                                    Object {
                                      "backgroundImage": "url(\\"https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg\\")",
                                      "height": 169,
                                      "width": 132,
                                    }
                                  }
                                >
                                  <div
                                    className="MuiCardMedia-root css-16cvb1l-MuiCardMedia-root"
                                    role="img"
                                    style={
                                      Object {
                                        "backgroundImage": "url(\\"https://img.youtube.com/vi/rVs1Nqe0Rxw/hqdefault.jpg\\")",
                                        "height": 169,
                                        "width": 132,
                                      }
                                    }
                                  />
                                </MuiCardMediaRoot>
                              </ForwardRef(CardMedia)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={8}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8"
                            ownerState={
                              Object {
                                "children": <ForwardRef(CardActionArea)>
                                  <ForwardRef(CardContent)
                                    className="justify-content-start"
                                    style={
                                      Object {
                                        "padding": 4,
                                        "paddingLeft": 10,
                                        "paddingRight": 10,
                                      }
                                    }
                                  >
                                    <ForwardRef(Typography)
                                      gutterBottom={true}
                                      variant="h6"
                                    >
                                      ID: 
                                      1800
                                      <ForwardRef(Chip)
                                        color="secondary"
                                        icon={<Memo />}
                                        id="YouTube-icon"
                                        label="YouTube"
                                        size="small"
                                        style={
                                          Object {
                                            "marginLeft": 12,
                                          }
                                        }
                                        variant="outlined"
                                      />
                                    </ForwardRef(Typography)>
                                    <ForwardRef(Typography)
                                      style={
                                        Object {
                                          "maxHeight": 48,
                                          "overflow": "hidden",
                                        }
                                      }
                                    >
                                      Лекция 3.5.2 | Классический закон сложения скоростей | А
                                    </ForwardRef(Typography)>
                                    <ForwardRef(Typography)>
                                      <Popover
                                        content={
                                          Array [
                                            <div>
                                              Лекции Лекториум / Физика / Кинематика
                                            </div>,
                                          ]
                                        }
                                        mouseEnterDelay={0.1}
                                        mouseLeaveDelay={0.1}
                                        overlayStyle={Object {}}
                                        placement="top"
                                        title="Темы карточки"
                                        trigger="hover"
                                      >
                                        <ForwardRef(Chip)
                                          label="Кинематика"
                                          size="small"
                                          variant="outlined"
                                        />
                                      </Popover>
                                      <br />
                                      <ForwardRef(Chip)
                                        className="mt-1"
                                        label="А.С. Чирцов"
                                        variant="outlined"
                                      />
                                    </ForwardRef(Typography)>
                                    <br />
                                    <br />
                                  </ForwardRef(CardContent)>
                                </ForwardRef(CardActionArea)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 8,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8 css-12dpnmv-MuiGrid-root"
                            >
                              <ForwardRef(CardActionArea)>
                                <MuiCardActionAreaRoot
                                  className="MuiCardActionArea-root"
                                  focusVisibleClassName=""
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(CardContent)
                                        className="justify-content-start"
                                        style={
                                          Object {
                                            "padding": 4,
                                            "paddingLeft": 10,
                                            "paddingRight": 10,
                                          }
                                        }
                                      >
                                        <ForwardRef(Typography)
                                          gutterBottom={true}
                                          variant="h6"
                                        >
                                          ID: 
                                          1800
                                          <ForwardRef(Chip)
                                            color="secondary"
                                            icon={<Memo />}
                                            id="YouTube-icon"
                                            label="YouTube"
                                            size="small"
                                            style={
                                              Object {
                                                "marginLeft": 12,
                                              }
                                            }
                                            variant="outlined"
                                          />
                                        </ForwardRef(Typography)>
                                        <ForwardRef(Typography)
                                          style={
                                            Object {
                                              "maxHeight": 48,
                                              "overflow": "hidden",
                                            }
                                          }
                                        >
                                          Лекция 3.5.2 | Классический закон сложения скоростей | А
                                        </ForwardRef(Typography)>
                                        <ForwardRef(Typography)>
                                          <Popover
                                            content={
                                              Array [
                                                <div>
                                                  Лекции Лекториум / Физика / Кинематика
                                                </div>,
                                              ]
                                            }
                                            mouseEnterDelay={0.1}
                                            mouseLeaveDelay={0.1}
                                            overlayStyle={Object {}}
                                            placement="top"
                                            title="Темы карточки"
                                            trigger="hover"
                                          >
                                            <ForwardRef(Chip)
                                              label="Кинематика"
                                              size="small"
                                              variant="outlined"
                                            />
                                          </Popover>
                                          <br />
                                          <ForwardRef(Chip)
                                            className="mt-1"
                                            label="А.С. Чирцов"
                                            variant="outlined"
                                          />
                                        </ForwardRef(Typography)>
                                        <br />
                                        <br />
                                      </ForwardRef(CardContent)>,
                                    }
                                  }
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root"
                                    focusVisibleClassName=""
                                  >
                                    <MuiButtonBaseRoot
                                      as="button"
                                      className="MuiButtonBase-root MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      ownerState={
                                        Object {
                                          "centerRipple": false,
                                          "children": Array [
                                            <ForwardRef(CardContent)
                                              className="justify-content-start"
                                              style={
                                                Object {
                                                  "padding": 4,
                                                  "paddingLeft": 10,
                                                  "paddingRight": 10,
                                                }
                                              }
                                            >
                                              <ForwardRef(Typography)
                                                gutterBottom={true}
                                                variant="h6"
                                              >
                                                ID: 
                                                1800
                                                <ForwardRef(Chip)
                                                  color="secondary"
                                                  icon={<Memo />}
                                                  id="YouTube-icon"
                                                  label="YouTube"
                                                  size="small"
                                                  style={
                                                    Object {
                                                      "marginLeft": 12,
                                                    }
                                                  }
                                                  variant="outlined"
                                                />
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)
                                                style={
                                                  Object {
                                                    "maxHeight": 48,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                Лекция 3.5.2 | Классический закон сложения скоростей | А
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)>
                                                <Popover
                                                  content={
                                                    Array [
                                                      <div>
                                                        Лекции Лекториум / Физика / Кинематика
                                                      </div>,
                                                    ]
                                                  }
                                                  mouseEnterDelay={0.1}
                                                  mouseLeaveDelay={0.1}
                                                  overlayStyle={Object {}}
                                                  placement="top"
                                                  title="Темы карточки"
                                                  trigger="hover"
                                                >
                                                  <ForwardRef(Chip)
                                                    label="Кинематика"
                                                    size="small"
                                                    variant="outlined"
                                                  />
                                                </Popover>
                                                <br />
                                                <ForwardRef(Chip)
                                                  className="mt-1"
                                                  label="А.С. Чирцов"
                                                  variant="outlined"
                                                />
                                              </ForwardRef(Typography)>
                                              <br />
                                              <br />
                                            </ForwardRef(CardContent)>,
                                            <MuiCardActionAreaFocusHighlight
                                              className="MuiCardActionArea-focusHighlight"
                                              ownerState={
                                                Object {
                                                  "children": <ForwardRef(CardContent)
                                                    className="justify-content-start"
                                                    style={
                                                      Object {
                                                        "padding": 4,
                                                        "paddingLeft": 10,
                                                        "paddingRight": 10,
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(Typography)
                                                      gutterBottom={true}
                                                      variant="h6"
                                                    >
                                                      ID: 
                                                      1800
                                                      <ForwardRef(Chip)
                                                        color="secondary"
                                                        icon={<Memo />}
                                                        id="YouTube-icon"
                                                        label="YouTube"
                                                        size="small"
                                                        style={
                                                          Object {
                                                            "marginLeft": 12,
                                                          }
                                                        }
                                                        variant="outlined"
                                                      />
                                                    </ForwardRef(Typography)>
                                                    <ForwardRef(Typography)
                                                      style={
                                                        Object {
                                                          "maxHeight": 48,
                                                          "overflow": "hidden",
                                                        }
                                                      }
                                                    >
                                                      Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                    </ForwardRef(Typography)>
                                                    <ForwardRef(Typography)>
                                                      <Popover
                                                        content={
                                                          Array [
                                                            <div>
                                                              Лекции Лекториум / Физика / Кинематика
                                                            </div>,
                                                          ]
                                                        }
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        overlayStyle={Object {}}
                                                        placement="top"
                                                        title="Темы карточки"
                                                        trigger="hover"
                                                      >
                                                        <ForwardRef(Chip)
                                                          label="Кинематика"
                                                          size="small"
                                                          variant="outlined"
                                                        />
                                                      </Popover>
                                                      <br />
                                                      <ForwardRef(Chip)
                                                        className="mt-1"
                                                        label="А.С. Чирцов"
                                                        variant="outlined"
                                                      />
                                                    </ForwardRef(Typography)>
                                                    <br />
                                                    <br />
                                                  </ForwardRef(CardContent)>,
                                                }
                                              }
                                            />,
                                          ],
                                          "className": "MuiCardActionArea-root css-fc4fch-MuiCardActionArea-root",
                                          "component": "button",
                                          "disableRipple": false,
                                          "disableTouchRipple": false,
                                          "disabled": false,
                                          "focusRipple": false,
                                          "focusVisible": false,
                                          "focusVisibleClassName": "",
                                          "tabIndex": 0,
                                        }
                                      }
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiCardActionArea-root css-b6lsxj-MuiButtonBase-root-MuiCardActionArea-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onContextMenu={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(CardContent)
                                          className="justify-content-start"
                                          style={
                                            Object {
                                              "padding": 4,
                                              "paddingLeft": 10,
                                              "paddingRight": 10,
                                            }
                                          }
                                        >
                                          <MuiCardContentRoot
                                            as="div"
                                            className="MuiCardContent-root justify-content-start"
                                            ownerState={
                                              Object {
                                                "children": Array [
                                                  <ForwardRef(Typography)
                                                    gutterBottom={true}
                                                    variant="h6"
                                                  >
                                                    ID: 
                                                    1800
                                                    <ForwardRef(Chip)
                                                      color="secondary"
                                                      icon={<Memo />}
                                                      id="YouTube-icon"
                                                      label="YouTube"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "marginLeft": 12,
                                                        }
                                                      }
                                                      variant="outlined"
                                                    />
                                                  </ForwardRef(Typography)>,
                                                  <ForwardRef(Typography)
                                                    style={
                                                      Object {
                                                        "maxHeight": 48,
                                                        "overflow": "hidden",
                                                      }
                                                    }
                                                  >
                                                    Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                  </ForwardRef(Typography)>,
                                                  <ForwardRef(Typography)>
                                                    <Popover
                                                      content={
                                                        Array [
                                                          <div>
                                                            Лекции Лекториум / Физика / Кинематика
                                                          </div>,
                                                        ]
                                                      }
                                                      mouseEnterDelay={0.1}
                                                      mouseLeaveDelay={0.1}
                                                      overlayStyle={Object {}}
                                                      placement="top"
                                                      title="Темы карточки"
                                                      trigger="hover"
                                                    >
                                                      <ForwardRef(Chip)
                                                        label="Кинематика"
                                                        size="small"
                                                        variant="outlined"
                                                      />
                                                    </Popover>
                                                    <br />
                                                    <ForwardRef(Chip)
                                                      className="mt-1"
                                                      label="А.С. Чирцов"
                                                      variant="outlined"
                                                    />
                                                  </ForwardRef(Typography)>,
                                                  <br />,
                                                  <br />,
                                                ],
                                                "className": "justify-content-start",
                                                "component": "div",
                                                "style": Object {
                                                  "padding": 4,
                                                  "paddingLeft": 10,
                                                  "paddingRight": 10,
                                                },
                                              }
                                            }
                                            style={
                                              Object {
                                                "padding": 4,
                                                "paddingLeft": 10,
                                                "paddingRight": 10,
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root justify-content-start css-46bh2p-MuiCardContent-root"
                                              style={
                                                Object {
                                                  "padding": 4,
                                                  "paddingLeft": 10,
                                                  "paddingRight": 10,
                                                }
                                              }
                                            >
                                              <ForwardRef(Typography)
                                                gutterBottom={true}
                                                variant="h6"
                                              >
                                                <MuiTypographyRoot
                                                  as="h6"
                                                  className="MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom"
                                                  ownerState={
                                                    Object {
                                                      "align": "inherit",
                                                      "children": Array [
                                                        "ID: ",
                                                        1800,
                                                        <ForwardRef(Chip)
                                                          color="secondary"
                                                          icon={<Memo />}
                                                          id="YouTube-icon"
                                                          label="YouTube"
                                                          size="small"
                                                          style={
                                                            Object {
                                                              "marginLeft": 12,
                                                            }
                                                          }
                                                          variant="outlined"
                                                        />,
                                                        false,
                                                        false,
                                                      ],
                                                      "className": undefined,
                                                      "color": undefined,
                                                      "component": undefined,
                                                      "gutterBottom": true,
                                                      "noWrap": false,
                                                      "paragraph": false,
                                                      "sx": Object {
                                                        "color": undefined,
                                                      },
                                                      "variant": "h6",
                                                      "variantMapping": Object {
                                                        "body1": "p",
                                                        "body2": "p",
                                                        "h1": "h1",
                                                        "h2": "h2",
                                                        "h3": "h3",
                                                        "h4": "h4",
                                                        "h5": "h5",
                                                        "h6": "h6",
                                                        "inherit": "p",
                                                        "subtitle1": "h6",
                                                        "subtitle2": "h6",
                                                      },
                                                    }
                                                  }
                                                  sx={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                >
                                                  <h6
                                                    className="MuiTypography-root MuiTypography-h6 MuiTypography-gutterBottom css-18k87ye-MuiTypography-root"
                                                  >
                                                    ID: 
                                                    1800
                                                    <ForwardRef(Chip)
                                                      color="secondary"
                                                      icon={<Memo />}
                                                      id="YouTube-icon"
                                                      label="YouTube"
                                                      size="small"
                                                      style={
                                                        Object {
                                                          "marginLeft": 12,
                                                        }
                                                      }
                                                      variant="outlined"
                                                    >
                                                      <MuiChipRoot
                                                        as="div"
                                                        className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorSecondary MuiChip-outlinedSecondary"
                                                        id="YouTube-icon"
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        ownerState={
                                                          Object {
                                                            "clickable": undefined,
                                                            "color": "secondary",
                                                            "component": "div",
                                                            "disabled": false,
                                                            "icon": <Memo />,
                                                            "id": "YouTube-icon",
                                                            "label": "YouTube",
                                                            "onDelete": false,
                                                            "size": "small",
                                                            "style": Object {
                                                              "marginLeft": 12,
                                                            },
                                                            "variant": "outlined",
                                                          }
                                                        }
                                                        style={
                                                          Object {
                                                            "marginLeft": 12,
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorSecondary MuiChip-outlinedSecondary css-34sciq-MuiChip-root"
                                                          id="YouTube-icon"
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          style={
                                                            Object {
                                                              "marginLeft": 12,
                                                            }
                                                          }
                                                        >
                                                          <ForwardRef(YouTubeIcon)
                                                            className="MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary"
                                                          >
                                                            <ForwardRef(SvgIcon)
                                                              className="MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary"
                                                              data-testid="YouTubeIcon"
                                                            >
                                                              <MuiSvgIconRoot
                                                                aria-hidden={true}
                                                                as="svg"
                                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary"
                                                                data-testid="YouTubeIcon"
                                                                focusable="false"
                                                                ownerState={
                                                                  Object {
                                                                    "children": <path
                                                                      d="M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z"
                                                                    />,
                                                                    "className": "MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary",
                                                                    "color": "inherit",
                                                                    "component": "svg",
                                                                    "data-testid": "YouTubeIcon",
                                                                    "fontSize": "medium",
                                                                    "viewBox": "0 0 24 24",
                                                                  }
                                                                }
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiChip-icon MuiChip-iconSmall MuiChip-iconColorSecondary css-i4bv87-MuiSvgIcon-root"
                                                                  data-testid="YouTubeIcon"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z"
                                                                  />
                                                                </svg>
                                                              </MuiSvgIconRoot>
                                                            </ForwardRef(SvgIcon)>
                                                          </ForwardRef(YouTubeIcon)>
                                                          <MuiChipLabel
                                                            className="MuiChip-label MuiChip-labelSmall"
                                                            ownerState={
                                                              Object {
                                                                "clickable": undefined,
                                                                "color": "secondary",
                                                                "component": "div",
                                                                "disabled": false,
                                                                "icon": <Memo />,
                                                                "id": "YouTube-icon",
                                                                "label": "YouTube",
                                                                "onDelete": false,
                                                                "size": "small",
                                                                "style": Object {
                                                                  "marginLeft": 12,
                                                                },
                                                                "variant": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiChip-label MuiChip-labelSmall css-wjsjww-MuiChip-label"
                                                            >
                                                              YouTube
                                                            </span>
                                                          </MuiChipLabel>
                                                        </div>
                                                      </MuiChipRoot>
                                                    </ForwardRef(Chip)>
                                                  </h6>
                                                </MuiTypographyRoot>
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)
                                                style={
                                                  Object {
                                                    "maxHeight": 48,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                <MuiTypographyRoot
                                                  as="p"
                                                  className="MuiTypography-root MuiTypography-body1"
                                                  ownerState={
                                                    Object {
                                                      "align": "inherit",
                                                      "children": "Лекция 3.5.2 | Классический закон сложения скоростей | А",
                                                      "className": undefined,
                                                      "color": undefined,
                                                      "component": undefined,
                                                      "gutterBottom": false,
                                                      "noWrap": false,
                                                      "paragraph": false,
                                                      "style": Object {
                                                        "maxHeight": 48,
                                                        "overflow": "hidden",
                                                      },
                                                      "sx": Object {
                                                        "color": undefined,
                                                      },
                                                      "variant": "body1",
                                                      "variantMapping": Object {
                                                        "body1": "p",
                                                        "body2": "p",
                                                        "h1": "h1",
                                                        "h2": "h2",
                                                        "h3": "h3",
                                                        "h4": "h4",
                                                        "h5": "h5",
                                                        "h6": "h6",
                                                        "inherit": "p",
                                                        "subtitle1": "h6",
                                                        "subtitle2": "h6",
                                                      },
                                                    }
                                                  }
                                                  style={
                                                    Object {
                                                      "maxHeight": 48,
                                                      "overflow": "hidden",
                                                    }
                                                  }
                                                  sx={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
                                                    style={
                                                      Object {
                                                        "maxHeight": 48,
                                                        "overflow": "hidden",
                                                      }
                                                    }
                                                  >
                                                    Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                  </p>
                                                </MuiTypographyRoot>
                                              </ForwardRef(Typography)>
                                              <ForwardRef(Typography)>
                                                <MuiTypographyRoot
                                                  as="p"
                                                  className="MuiTypography-root MuiTypography-body1"
                                                  ownerState={
                                                    Object {
                                                      "align": "inherit",
                                                      "children": Array [
                                                        <Popover
                                                          content={
                                                            Array [
                                                              <div>
                                                                Лекции Лекториум / Физика / Кинематика
                                                              </div>,
                                                            ]
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          overlayStyle={Object {}}
                                                          placement="top"
                                                          title="Темы карточки"
                                                          trigger="hover"
                                                        >
                                                          <ForwardRef(Chip)
                                                            label="Кинематика"
                                                            size="small"
                                                            variant="outlined"
                                                          />
                                                        </Popover>,
                                                        <br />,
                                                        <ForwardRef(Chip)
                                                          className="mt-1"
                                                          label="А.С. Чирцов"
                                                          variant="outlined"
                                                        />,
                                                      ],
                                                      "className": undefined,
                                                      "color": undefined,
                                                      "component": undefined,
                                                      "gutterBottom": false,
                                                      "noWrap": false,
                                                      "paragraph": false,
                                                      "sx": Object {
                                                        "color": undefined,
                                                      },
                                                      "variant": "body1",
                                                      "variantMapping": Object {
                                                        "body1": "p",
                                                        "body2": "p",
                                                        "h1": "h1",
                                                        "h2": "h2",
                                                        "h3": "h3",
                                                        "h4": "h4",
                                                        "h5": "h5",
                                                        "h6": "h6",
                                                        "inherit": "p",
                                                        "subtitle1": "h6",
                                                        "subtitle2": "h6",
                                                      },
                                                    }
                                                  }
                                                  sx={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                >
                                                  <p
                                                    className="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
                                                  >
                                                    <Popover
                                                      content={
                                                        Array [
                                                          <div>
                                                            Лекции Лекториум / Физика / Кинематика
                                                          </div>,
                                                        ]
                                                      }
                                                      mouseEnterDelay={0.1}
                                                      mouseLeaveDelay={0.1}
                                                      overlayStyle={Object {}}
                                                      placement="top"
                                                      title="Темы карточки"
                                                      trigger="hover"
                                                    >
                                                      <Tooltip
                                                        arrowPointAtCenter={false}
                                                        autoAdjustOverflow={true}
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        overlay={
                                                          <React.Fragment>
                                                            <div
                                                              className="ant-popover-title"
                                                            >
                                                              Темы карточки
                                                            </div>
                                                            <div
                                                              className="ant-popover-inner-content"
                                                            >
                                                              <div>
                                                                Лекции Лекториум / Физика / Кинематика
                                                              </div>
                                                            </div>
                                                          </React.Fragment>
                                                        }
                                                        overlayStyle={Object {}}
                                                        placement="top"
                                                        prefixCls="ant-popover"
                                                        transitionName="ant-zoom-big"
                                                        trigger="hover"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          arrowContent={
                                                            <span
                                                              className="ant-popover-arrow-content"
                                                            />
                                                          }
                                                          arrowPointAtCenter={false}
                                                          autoAdjustOverflow={true}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tc",
                                                                  "bc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "left": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cr",
                                                                  "cl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "right": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cl",
                                                                  "cr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "top": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bc",
                                                                  "tc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          motion={
                                                            Object {
                                                              "motionDeadline": 1000,
                                                              "motionName": "ant-zoom-big",
                                                            }
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onVisibleChange={[Function]}
                                                          overlay={
                                                            <React.Fragment>
                                                              <div
                                                                className="ant-popover-title"
                                                              >
                                                                Темы карточки
                                                              </div>
                                                              <div
                                                                className="ant-popover-inner-content"
                                                              >
                                                                <div>
                                                                  Лекции Лекториум / Физика / Кинематика
                                                                </div>
                                                              </div>
                                                            </React.Fragment>
                                                          }
                                                          overlayClassName=""
                                                          overlayStyle={Object {}}
                                                          placement="top"
                                                          prefixCls="ant-popover"
                                                          transitionName="ant-zoom-big"
                                                          trigger="hover"
                                                          visible={false}
                                                        >
                                                          <Trigger
                                                            action="hover"
                                                            afterPopupVisibleChange={[Function]}
                                                            arrowContent={
                                                              <span
                                                                className="ant-popover-arrow-content"
                                                              />
                                                            }
                                                            arrowPointAtCenter={false}
                                                            autoAdjustOverflow={true}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tc",
                                                                    "bc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "left": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cr",
                                                                    "cl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "right": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cl",
                                                                    "cr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "top": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bc",
                                                                    "tc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0.1}
                                                            mouseLeaveDelay={0.1}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            overlay={
                                                              <React.Fragment>
                                                                <div
                                                                  className="ant-popover-title"
                                                                >
                                                                  Темы карточки
                                                                </div>
                                                                <div
                                                                  className="ant-popover-inner-content"
                                                                >
                                                                  <div>
                                                                    Лекции Лекториум / Физика / Кинематика
                                                                  </div>
                                                                </div>
                                                              </React.Fragment>
                                                            }
                                                            popup={[Function]}
                                                            popupAlign={Object {}}
                                                            popupClassName=""
                                                            popupMotion={
                                                              Object {
                                                                "motionDeadline": 1000,
                                                                "motionName": "ant-zoom-big",
                                                              }
                                                            }
                                                            popupPlacement="top"
                                                            popupStyle={Object {}}
                                                            popupTransitionName="ant-zoom-big"
                                                            popupVisible={false}
                                                            prefixCls="ant-popover"
                                                            showAction={Array []}
                                                            visible={false}
                                                          >
                                                            <ForwardRef(Chip)
                                                              key="trigger"
                                                              label="Кинематика"
                                                              onMouseEnter={[Function]}
                                                              onMouseLeave={[Function]}
                                                              size="small"
                                                              variant="outlined"
                                                            >
                                                              <MuiChipRoot
                                                                as="div"
                                                                className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorDefault MuiChip-outlinedDefault"
                                                                onKeyDown={[Function]}
                                                                onKeyUp={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onMouseLeave={[Function]}
                                                                ownerState={
                                                                  Object {
                                                                    "clickable": undefined,
                                                                    "color": "default",
                                                                    "component": "div",
                                                                    "disabled": false,
                                                                    "label": "Кинематика",
                                                                    "onBlur": undefined,
                                                                    "onClick": undefined,
                                                                    "onContextMenu": undefined,
                                                                    "onDelete": false,
                                                                    "onFocus": undefined,
                                                                    "onMouseDown": undefined,
                                                                    "onMouseEnter": [Function],
                                                                    "onMouseLeave": [Function],
                                                                    "onTouchStart": undefined,
                                                                    "size": "small",
                                                                    "variant": "outlined",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiChip-outlined MuiChip-sizeSmall MuiChip-colorDefault MuiChip-outlinedDefault css-911tg4-MuiChip-root"
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseEnter={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                >
                                                                  <MuiChipLabel
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                    ownerState={
                                                                      Object {
                                                                        "clickable": undefined,
                                                                        "color": "default",
                                                                        "component": "div",
                                                                        "disabled": false,
                                                                        "label": "Кинематика",
                                                                        "onBlur": undefined,
                                                                        "onClick": undefined,
                                                                        "onContextMenu": undefined,
                                                                        "onDelete": false,
                                                                        "onFocus": undefined,
                                                                        "onMouseDown": undefined,
                                                                        "onMouseEnter": [Function],
                                                                        "onMouseLeave": [Function],
                                                                        "onTouchStart": undefined,
                                                                        "size": "small",
                                                                        "variant": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiChip-label MuiChip-labelSmall css-wjsjww-MuiChip-label"
                                                                    >
                                                                      Кинематика
                                                                    </span>
                                                                  </MuiChipLabel>
                                                                </div>
                                                              </MuiChipRoot>
                                                            </ForwardRef(Chip)>
                                                          </Trigger>
                                                        </ForwardRef(Tooltip)>
                                                      </Tooltip>
                                                    </Popover>
                                                    <br />
                                                    <ForwardRef(Chip)
                                                      className="mt-1"
                                                      label="А.С. Чирцов"
                                                      variant="outlined"
                                                    >
                                                      <MuiChipRoot
                                                        as="div"
                                                        className="MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorDefault MuiChip-outlinedDefault mt-1"
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        ownerState={
                                                          Object {
                                                            "className": "mt-1",
                                                            "clickable": undefined,
                                                            "color": "default",
                                                            "component": "div",
                                                            "disabled": false,
                                                            "label": "А.С. Чирцов",
                                                            "onDelete": false,
                                                            "size": "medium",
                                                            "variant": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiChip-root MuiChip-outlined MuiChip-sizeMedium MuiChip-colorDefault MuiChip-outlinedDefault mt-1 css-132vamb-MuiChip-root"
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                        >
                                                          <MuiChipLabel
                                                            className="MuiChip-label MuiChip-labelMedium"
                                                            ownerState={
                                                              Object {
                                                                "className": "mt-1",
                                                                "clickable": undefined,
                                                                "color": "default",
                                                                "component": "div",
                                                                "disabled": false,
                                                                "label": "А.С. Чирцов",
                                                                "onDelete": false,
                                                                "size": "medium",
                                                                "variant": "outlined",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiChip-label MuiChip-labelMedium css-6od3lo-MuiChip-label"
                                                            >
                                                              А.С. Чирцов
                                                            </span>
                                                          </MuiChipLabel>
                                                        </div>
                                                      </MuiChipRoot>
                                                    </ForwardRef(Chip)>
                                                  </p>
                                                </MuiTypographyRoot>
                                              </ForwardRef(Typography)>
                                              <br />
                                              <br />
                                            </div>
                                          </MuiCardContentRoot>
                                        </ForwardRef(CardContent)>
                                        <MuiCardActionAreaFocusHighlight
                                          className="MuiCardActionArea-focusHighlight"
                                          ownerState={
                                            Object {
                                              "children": <ForwardRef(CardContent)
                                                className="justify-content-start"
                                                style={
                                                  Object {
                                                    "padding": 4,
                                                    "paddingLeft": 10,
                                                    "paddingRight": 10,
                                                  }
                                                }
                                              >
                                                <ForwardRef(Typography)
                                                  gutterBottom={true}
                                                  variant="h6"
                                                >
                                                  ID: 
                                                  1800
                                                  <ForwardRef(Chip)
                                                    color="secondary"
                                                    icon={<Memo />}
                                                    id="YouTube-icon"
                                                    label="YouTube"
                                                    size="small"
                                                    style={
                                                      Object {
                                                        "marginLeft": 12,
                                                      }
                                                    }
                                                    variant="outlined"
                                                  />
                                                </ForwardRef(Typography)>
                                                <ForwardRef(Typography)
                                                  style={
                                                    Object {
                                                      "maxHeight": 48,
                                                      "overflow": "hidden",
                                                    }
                                                  }
                                                >
                                                  Лекция 3.5.2 | Классический закон сложения скоростей | А
                                                </ForwardRef(Typography)>
                                                <ForwardRef(Typography)>
                                                  <Popover
                                                    content={
                                                      Array [
                                                        <div>
                                                          Лекции Лекториум / Физика / Кинематика
                                                        </div>,
                                                      ]
                                                    }
                                                    mouseEnterDelay={0.1}
                                                    mouseLeaveDelay={0.1}
                                                    overlayStyle={Object {}}
                                                    placement="top"
                                                    title="Темы карточки"
                                                    trigger="hover"
                                                  >
                                                    <ForwardRef(Chip)
                                                      label="Кинематика"
                                                      size="small"
                                                      variant="outlined"
                                                    />
                                                  </Popover>
                                                  <br />
                                                  <ForwardRef(Chip)
                                                    className="mt-1"
                                                    label="А.С. Чирцов"
                                                    variant="outlined"
                                                  />
                                                </ForwardRef(Typography)>
                                                <br />
                                                <br />
                                              </ForwardRef(CardContent)>,
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiCardActionArea-focusHighlight css-1v2exvi-MuiCardActionArea-focusHighlight"
                                          />
                                        </MuiCardActionAreaFocusHighlight>
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                        >
                                          <MuiTouchRippleRoot
                                            className="MuiTouchRipple-root"
                                          >
                                            <span
                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </MuiTouchRippleRoot>
                                        </ForwardRef(TouchRipple)>
                                      </button>
                                    </MuiButtonBaseRoot>
                                  </ForwardRef(ButtonBase)>
                                </MuiCardActionAreaRoot>
                              </ForwardRef(CardActionArea)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiPaperRoot>
            </ForwardRef(Paper)>
          </MuiCardRoot>
        </ForwardRef(Card)>
      </div>
    </CardMicroView>
  </ApolloProvider>
</MockedProvider>
`;
